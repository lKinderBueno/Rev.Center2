<UserControl x:Class="Rev.Center2.system_info"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Rev.Center2"
             xmlns:UControl="clr-namespace:Rev.Center2"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             x:Name="userControl" Width="1920" Height="1080" BorderBrush="Red">
    <FrameworkElement.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1_OK" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.Padding" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00000000" Offset="0"/>
                                    <GradientStop Color="#FF4B4B4B" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Border.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#00000000" Offset="0"/>
                                            <GradientStop Color="#FF959595" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="border" Property="Border.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#00000000" Offset="1"/>
                                            <GradientStop Color="#FF4B4B4B" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                                <Setter TargetName="border" Value="{StaticResource Button.Disabled.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="border" Value="{StaticResource Button.Disabled.Border}" Property="Border.BorderBrush"/>
                                <Setter TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"
                        Property="TextElement.Foreground"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="RBTN_CPU" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="1" HorizontalAlignment="Center" Margin="0" TextWrapping="Wrap"
                         Width="232" Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center"
                         Height="Auto" Foreground="#FF828282" TextAlignment="Center" FontSize="21.333"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="29.333"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="29.333"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RBTN_GPU_selected" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Fill="{TemplateBinding Control.Foreground}" StrokeThickness="0" Width="34"
                         Stroke="{x:Null}">
                                <UIElement.OpacityMask>
                                    <ImageBrush ImageSource="Image/Page_SystemMonitor/btn_gpu1_normal.png"/>
                                </UIElement.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter Property="UIElement.OpacityMask">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/btn_gpu1_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="UIElement.OpacityMask">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/btn_gpu1_selected.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RBTN_GPUSelected2" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Grid.ColumnSpan="2" Fill="{TemplateBinding Control.Foreground}" Margin="0"
                         StrokeThickness="0" Width="34" Height="34" Stroke="{x:Null}">
                                <UIElement.OpacityMask>
                                    <ImageBrush ImageSource="Image/Page_SystemMonitor/btn_gpu2_normal.png"/>
                                </UIElement.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="UIElement.OpacityMask">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/btn_gpu2_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="UIElement.OpacityMask">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/btn_gpu2_selected.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1_reset1" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.Padding" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                            <Storyboard x:Key="Storyboard1_save" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.2"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </FrameworkTemplate.Resources>
                        <Border x:Name="border" SnapsToDevicePixels="true">
                            <WrapPanel Margin="0,0,-24,0">
                                <Image x:Name="Image_Page_SystemMonitor_btn_save_normal_png" Margin="0"
                       Source="Image/Page_SystemMonitor/btn_default_normal.png" Stretch="Fill" Width="56" Height="56"
                       HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="Hand"/>
                                <TextBlock x:Name="textBlock" Height="Auto" TextWrapping="Wrap"
                           Text="{TemplateBinding ContentControl.Content}" Width="145" VerticalAlignment="Center"/>
                            </WrapPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="Image_Page_SystemMonitor_btn_save_normal_png" Property="Image.Source"
                        Value="Image/Page_SystemMonitor/btn_default_hover.png"/>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="Image_Page_SystemMonitor_btn_save_normal_png" Property="Image.Source"
                        Value="Image/Page_SystemMonitor/btn_save_pressed.png"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1_SAVE" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.Padding" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                            <Storyboard x:Key="Storyboard1_save" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.2"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </FrameworkTemplate.Resources>
                        <Border x:Name="border" SnapsToDevicePixels="true">
                            <WrapPanel Margin="0">
                                <Image x:Name="Image_Page_SystemMonitor_btn_save_normal_png" Margin="0"
                       Source="Image/Page_SystemMonitor/btn_save_normal.png" Stretch="Fill" Width="56" Height="56"
                       HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="Hand"/>
                                <TextBlock x:Name="textBlock" Height="Auto" TextWrapping="Wrap"
                           Text="{TemplateBinding ContentControl.Content}" Width="Auto" VerticalAlignment="Center"/>
                            </WrapPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="Image_Page_SystemMonitor_btn_save_normal_png" Property="Image.Source"
                        Value="Image/Page_SystemMonitor/btn_save_hover.png"/>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="Image_Page_SystemMonitor_btn_save_normal_png" Property="Image.Source"
                        Value="Image/Page_SystemMonitor/btn_save_pressed.png"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                                <TriggerBase.EnterActions>
                                    <StopStoryboard BeginStoryboardName="Storyboard1_save_BeginStoryboard"/>
                                </TriggerBase.EnterActions>
                                <Setter Property="UIElement.Opacity" Value="0.2"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="true">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard x:Name="Storyboard1_save_BeginStoryboard" Storyboard="{StaticResource Storyboard1_save}"/>
                                </TriggerBase.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1_FAN" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="46" Margin="0" VerticalAlignment="Center" Width="46">
                                <Rectangle x:Name="rectangle" Margin="0" Width="46" Height="46" StrokeThickness="0"
                           Fill="{TemplateBinding Control.Background}" Stroke="{x:Null}">
                                    <UIElement.OpacityMask>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/Fan/btn_enable.png"/>
                                    </UIElement.OpacityMask>
                                </Rectangle>
                            </Grid>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" CornerRadius="100"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,1,2,1"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Hidden"/>
                            <TextBlock x:Name="textBlock" Grid.Column="1" Margin="0" TextWrapping="Wrap"
                         Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center"
                         HorizontalAlignment="Left" Foreground="#FFB4B4B4" FontSize="21.333"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="24"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="UIElement.OpacityMask">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/Fan/btn_disable.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="24"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
        <Style x:Key="ProgressBarStyle1_ram" TargetType="{x:Type ProgressBar}">
            <Setter Property="Control.Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Control.Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                     Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left" Margin="5">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Control.Foreground}">
                                    <UIElement.OpacityMask>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/CPUGPUSetting/slider_range_1.png" Stretch="UniformToFill"/>
                                    </UIElement.OpacityMask>
                                </Rectangle>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Control.Foreground}" RenderTransformOrigin="0.5,0.5">
                                    <UIElement.OpacityMask>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/CPUGPUSetting/slider_range_1.png" Stretch="UniformToFill"/>
                                    </UIElement.OpacityMask>
                                    <UIElement.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </UIElement.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ProgressBar.Orientation" Value="Vertical">
                                <Setter TargetName="TemplateRoot" Property="FrameworkElement.LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="ProgressBar.IsIndeterminate" Value="true">
                                <Setter TargetName="Indicator" Property="UIElement.Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.Padding" Value="1"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" BorderThickness="0" SnapsToDevicePixels="true" Background="#66000000">
                            <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Border.Background" Value="#CC000000"/>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}" Property="Border.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD"/>
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="true"
                       Width="{TemplateBinding FrameworkElement.Width}" Fill="Black"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Value="{DynamicResource ScrollBar.Pressed.Thumb}" Property="Shape.Fill"/>
                            </Trigger>
                            <Trigger Property="Thumb.IsDragging" Value="true">
                                <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}" Property="Shape.Fill"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}"
                       Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="true"
                       Width="{TemplateBinding FrameworkElement.Width}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}" Property="Shape.Fill"/>
                            </Trigger>
                            <Trigger Property="Thumb.IsDragging" Value="true">
                                <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}" Property="Shape.Fill"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle1_cpuset" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Control.Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1,0"/>
            <Setter Property="FrameworkElement.Width"
              Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="FrameworkElement.MinWidth"
              Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" Grid.Row="1"/>
                            <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}"
                            IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton}"
                            Background="{x:Null}" BorderBrush="{x:Null}">
                                <Path x:Name="ArrowTop"
                      Data="M 0,4 C 0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 Z"
                      Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
                     Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" BorderThickness="3,0" BorderBrush="Red" Padding="0"
                         Margin="2,0"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}"
                            IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="2"
                            Style="{StaticResource ScrollBarButton}" Background="{x:Null}" BorderBrush="{x:Null}">
                                <Path x:Name="ArrowBottom"
                      Data="M 0,2.5 C 0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 Z"
                      Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Shape.Fill"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Shape.Fill"/>
                            </MultiDataTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                                <Setter TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Shape.Fill"/>
                                <Setter TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Shape.Fill"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                    <Setter Property="FrameworkElement.Width" Value="Auto"/>
                    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
                    <Setter Property="FrameworkElement.Height"
                  Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="FrameworkElement.MinHeight"
                  Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="Control.BorderThickness" Value="0,1"/>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                          Background="{TemplateBinding Control.Background}" Grid.Column="1"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}"
                                IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft"
                          Data="M 3.18,7 C 3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 Z"
                          Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{DynamicResource ScrollBarThumbVertical}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}"
                                IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight"
                          Data="M 1.81,7 C 1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 Z"
                          Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Shape.Fill"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Shape.Fill"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="false">
                                        <Setter TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Shape.Fill"/>
                                        <Setter TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Shape.Fill"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ScrollViewerControlTemplate1_cpuset" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Control.Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                   Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="false"
                                CanVerticallyScroll="false" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                Content="{TemplateBinding ContentControl.Content}" Grid.Column="0"
                                Margin="{TemplateBinding Control.Padding}" Grid.Row="0"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar"
                   Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                   Minimum="0" Grid.Row="0"
                   Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                   ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Background="#33000000"
                   BorderBrush="#FF717171" BorderThickness="0" Style="{DynamicResource ScrollBarStyle1_cpuset}"
                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar"
                   Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0"
                   Orientation="Horizontal" Grid.Row="1"
                   Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                   ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Background="#33000000"
                   Style="{DynamicResource ScrollBarStyle1_cpuset}"
                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                   BorderBrush="{x:Null}"/>
            </Grid>
        </ControlTemplate>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
        <Style x:Key="RepeatButtonTransparent2" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.Background" Value="Transparent"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}"
                       Width="{TemplateBinding FrameworkElement.Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="CheckBoxStyle_auto" TargetType="{x:Type CheckBox}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="46" Margin="0,0,0,-7" VerticalAlignment="Center" Width="46">
                                <Rectangle x:Name="rectangle" Margin="0" Width="46" Height="46" StrokeThickness="0"
                           Fill="{TemplateBinding Control.Background}" Stroke="{x:Null}">
                                    <UIElement.OpacityMask>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/Fan/btn_enable.png"/>
                                    </UIElement.OpacityMask>
                                </Rectangle>
                            </Grid>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" CornerRadius="100"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,22,0,0"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Hidden"/>
                            <TextBlock x:Name="textBlock" Grid.Column="1" Margin="0,10.926,-44.974,3.926" TextWrapping="Wrap"
                         Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center"
                         HorizontalAlignment="Left" Foreground="#FFB4B4B4" FontSize="21.333"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="24"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="UIElement.OpacityMask">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/Fan/btn_disable.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="24"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1_customFan" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="46" Margin="0,0,5,0" VerticalAlignment="Center" Width="46">
                                <Rectangle x:Name="rectangle" Margin="0" Width="46" Height="46" StrokeThickness="0" Stroke="{x:Null}"
                           OpacityMask="{x:Null}">
                                    <Shape.Fill>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/FanSetting/btn_fan_cpu_normal.png"/>
                                    </Shape.Fill>
                                </Rectangle>
                            </Grid>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" CornerRadius="100"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,22,0,12.4"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Hidden"/>
                            <TextBlock x:Name="textBlock" Grid.Column="1" Margin="5,0,0,0" TextWrapping="Wrap"
                         Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center"
                         HorizontalAlignment="Left" Foreground="{TemplateBinding Control.Foreground}" FontSize="21.333"
                         Visibility="Visible"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/FanSetting/btn_fan_cpu_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/FanSetting/btn_fan_cpu_selected.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="26.667"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle_customFanGPU" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="46" Margin="0,0,5,0" VerticalAlignment="Center" Width="46">
                                <Rectangle x:Name="rectangle" Margin="0" Width="46" Height="46" StrokeThickness="0" Stroke="{x:Null}"
                           OpacityMask="{x:Null}">
                                    <Shape.Fill>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/FanSetting/btn_fan_gpu1_normal.png"/>
                                    </Shape.Fill>
                                </Rectangle>
                            </Grid>
                            <Border x:Name="radioButtonBorder_Copy" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" CornerRadius="100"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,26.8,0,-3.6"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Hidden"/>
                            <TextBlock x:Name="textBlock" Grid.Column="1" Margin="5,0,0,0" TextWrapping="Wrap"
                         Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center"
                         HorizontalAlignment="Left" Foreground="{TemplateBinding Control.Foreground}" FontSize="21.333"
                         Visibility="Visible"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/FanSetting/btn_fan_gpu1_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/FanSetting/btn_gpu1_selected.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="26.667"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1_custonFanGPU2" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="46" Margin="0,0,5,0" VerticalAlignment="Center" Width="46">
                                <Rectangle x:Name="rectangle" Margin="0" Width="46" Height="46" StrokeThickness="0" Stroke="{x:Null}"
                           OpacityMask="{x:Null}">
                                    <Shape.Fill>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/FanSetting/btn_fan_gpu2_normal.png"/>
                                    </Shape.Fill>
                                </Rectangle>
                            </Grid>
                            <Border x:Name="radioButtonBorder_Copy" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" CornerRadius="100"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,26.8,0,-3.6"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Hidden"/>
                            <TextBlock x:Name="textBlock" Grid.Column="1" Margin="5,0,0,0" TextWrapping="Wrap"
                         Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center"
                         HorizontalAlignment="Left" Foreground="{TemplateBinding Control.Foreground}" FontSize="21.333"
                         Visibility="Visible"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/FanSetting/btn_fan_gpu2_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/FanSetting/btn_gpu2_selected.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="26.667"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1_MEMDefault" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="70" Margin="0" VerticalAlignment="Center" Width="120">
                                <Rectangle x:Name="rectangle" Margin="0" Width="70" Height="70" StrokeThickness="0" Stroke="{x:Null}"
                           OpacityMask="{x:Null}">
                                    <Shape.Fill>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_default_nomal.png"/>
                                    </Shape.Fill>
                                </Rectangle>
                                <TextBlock x:Name="textBlock" Grid.Column="0" Margin="0" TextWrapping="Wrap"
                           Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center"
                           HorizontalAlignment="Center" Foreground="#FFB4B4B4" FontSize="21.333" Visibility="Hidden"/>
                            </Grid>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" CornerRadius="100"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,22,0,0"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Hidden"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_default_nomal.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="UIElement.Visibility" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_default_pressed.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_default_selected.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="26.667"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                    <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="textBlock" Property="UIElement.Visibility" Value="Visible"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="26.667"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_default_nomal.png"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1_memCustom" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="70" Margin="0" VerticalAlignment="Center" Width="120">
                                <Rectangle x:Name="rectangle" Margin="0" Width="70" Height="70" StrokeThickness="0" Stroke="{x:Null}"
                           OpacityMask="{x:Null}">
                                    <Shape.Fill>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_custom_nomal.png"/>
                                    </Shape.Fill>
                                </Rectangle>
                                <TextBlock x:Name="textBlock" Grid.Column="0" Margin="0" TextWrapping="Wrap"
                           Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center"
                           HorizontalAlignment="Center" Foreground="#FFB4B4B4" FontSize="21.333" Visibility="Hidden"/>
                            </Grid>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" CornerRadius="100"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,22,0,0"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Hidden"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_custom_nomal.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="UIElement.Visibility" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_custom_pressed.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_custom_selected.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="26.667"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                    <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="textBlock" Property="UIElement.Visibility" Value="Visible"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="26.667"/>
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_custom_nomal.png"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1_memXMP1" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="70" Margin="0" VerticalAlignment="Center" Width="120">
                                <Rectangle x:Name="rectangle" Margin="0" Width="70" Height="70" StrokeThickness="0" Stroke="{x:Null}"
                           OpacityMask="{x:Null}">
                                    <Shape.Fill>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_xmp1_nomal.png"/>
                                    </Shape.Fill>
                                </Rectangle>
                                <TextBlock x:Name="textBlock" Grid.Column="0" Margin="0" TextWrapping="Wrap"
                           Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center"
                           HorizontalAlignment="Center" Foreground="#FFB4B4B4" FontSize="21.333" Visibility="Hidden"/>
                            </Grid>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" CornerRadius="100"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,22,0,0"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Hidden"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_xmp1_nomal.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="UIElement.Visibility" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_xmp1_pressed.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_xmp1_selected.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="26.667"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                    <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="textBlock" Property="UIElement.Visibility" Value="Visible"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="26.667"/>
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_xmp1_nomal.png"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1_memXMP2" TargetType="{x:Type RadioButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="70" Margin="0" VerticalAlignment="Center" Width="120">
                                <Rectangle x:Name="rectangle" Margin="0" Width="70" Height="70" StrokeThickness="0" Stroke="{x:Null}"
                           OpacityMask="{x:Null}">
                                    <Shape.Fill>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_xmp2_nomal.png"/>
                                    </Shape.Fill>
                                </Rectangle>
                                <TextBlock x:Name="textBlock" Grid.Column="0" Margin="0" TextWrapping="Wrap"
                           Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Center"
                           HorizontalAlignment="Center" Foreground="#FFB4B4B4" FontSize="21.333" Visibility="Hidden"/>
                            </Grid>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" CornerRadius="100"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,22,0,0"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Hidden"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_xmp2_nomal.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="UIElement.Visibility" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false"/>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_xmp2_pressed.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_xmp2_selected.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="26.667"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                    <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="textBlock" Property="UIElement.Visibility" Value="Visible"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="26.667"/>
                                <Setter TargetName="rectangle" Property="Shape.Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_memory_xmp2_nomal.png"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBlockStyle1" TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.Foreground" Value="#FF3F3F3F"/>
            <Style.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                    <Setter Property="TextBlock.Foreground" Value="#FF7D7D7D"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="true">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                    <Setter Property="TextBlock.Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="ButtonBase.ClickMode" Value="Press"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{StaticResource ComboBox.Static.Border}"
                    Background="{TemplateBinding Control.Background}">
                            <UIElement.OpacityMask>
                                <ImageBrush ImageSource="Image/Page_SystemMonitor/MEMSetting/btn_mem_setting_dropdown_on.png"/>
                            </UIElement.OpacityMask>
                            <Border x:Name="splitBorder" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Stretch"
                      BorderThickness="0" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center"
                      Fill="{StaticResource ComboBox.Static.Glyph}"
                      Data="F1 M 0,0 L 2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0 Z"
                      Visibility="Hidden"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"
                        Property="Border.BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"
                        Property="Border.BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" Property="Shape.Fill"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"
                        Property="Border.BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                                <Setter Property="Control.Foreground" Value="#FF7D7D7D"/>
                                <Setter TargetName="templateRoot" Property="UIElement.Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="true">
                                <Setter Property="Control.Foreground" Value="White"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"
                        Property="Border.BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Control.Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1,0"/>
            <Setter Property="FrameworkElement.Width"
              Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="FrameworkElement.MinWidth"
              Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="10" HorizontalAlignment="Right">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"
                               Height="0*"/>
                                <RowDefinition/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"
                               Height="0*"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}" Grid.Row="1" Width="Auto"
                      Background="{TemplateBinding Control.Background}"/>
                            <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}"
                            IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton}"
                            Width="Auto" Height="0" Grid.RowSpan="2" VerticalAlignment="Top" Background="{x:Null}">
                                <Path x:Name="ArrowTop"
                      Data="M 0,4 C 0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 Z"
                      Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
                     Grid.Row="1" Width="Auto">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}"
                            IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="2"
                            Style="{StaticResource ScrollBarButton}" Width="Auto" Height="0" VerticalAlignment="Top"
                            Background="{x:Null}">
                                <Path x:Name="ArrowBottom"
                      Data="M 0,2.5 C 0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 Z"
                      Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Shape.Fill"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Shape.Fill"/>
                            </MultiDataTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                                <Setter TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Shape.Fill"/>
                                <Setter TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Shape.Fill"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                    <Setter Property="FrameworkElement.Width" Value="Auto"/>
                    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
                    <Setter Property="FrameworkElement.Height"
                  Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="FrameworkElement.MinHeight"
                  Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="Control.BorderThickness" Value="0,1"/>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                          Background="{TemplateBinding Control.Background}" Grid.Column="1"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}"
                                IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft"
                          Data="M 3.18,7 C 3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 Z"
                          Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}"
                                IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight"
                          Data="M 1.81,7 C 1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 Z"
                          Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Shape.Fill"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Shape.Fill"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Shape.Fill"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="false">
                                        <Setter TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Shape.Fill"/>
                                        <Setter TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Shape.Fill"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Control.Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                   Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="false"
                                CanVerticallyScroll="false" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                Content="{TemplateBinding ContentControl.Content}" Grid.Column="0"
                                Margin="{TemplateBinding Control.Padding}" Grid.Row="0"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar"
                   Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                   Minimum="0" Grid.Row="0"
                   Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                   ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                   Style="{DynamicResource ScrollBarStyle1}" Background="{TemplateBinding Control.BorderBrush}"
                   BorderThickness="0" IsEnabled="true" HorizontalAlignment="Stretch"
                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar"
                   Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0"
                   Orientation="Horizontal" Grid.Row="1"
                   Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                   ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="99*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="1" Margin="1,1,0,1"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom"
               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                         FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                         FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                    BorderThickness="0,2,0,0" Background="#FF2A2A2A">
                            <ScrollViewer x:Name="DropDownScrollViewer" HorizontalAlignment="Stretch" BorderThickness="0"
                            Template="{DynamicResource ScrollViewerControlTemplate1}" Height="114" BorderBrush="{x:Null}">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled" Height="102.5">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                      Style="{StaticResource ComboBoxToggleButton}" RenderTransformOrigin="0.5,0.5" Margin="0"
                      Foreground="{TemplateBinding Control.Foreground}"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                      OpacityMask="{x:Null}">
                    <UIElement.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform AngleX="0"/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </UIElement.RenderTransform>
                </ToggleButton>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                          ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                          Margin="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Height="22"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                    <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                    <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000"/>
                </Trigger>
                <Trigger Property="ItemsControl.HasItems" Value="false"/>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemsControl.IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="UIElement.AllowDrop" Value="true"/>
            <Setter Property="FrameworkElement.MinWidth" Value="0"/>
            <Setter Property="FrameworkElement.MinHeight" Value="0"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="100"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                         FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                         FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                    BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer" Foreground="White">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                      Style="{StaticResource ComboBoxToggleButton}" HorizontalContentAlignment="Center"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                      Foreground="{x:Null}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                          ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                          IsHitTestVisible="false" Margin="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled" Grid.Column="1" HorizontalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                    <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                    <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000"/>
                </Trigger>
                <Trigger Property="ItemsControl.HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemsControl.IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Top"/>
                    <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Left"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1_dimmCustom" TargetType="{x:Type ComboBox}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Control.Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Control.Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="ComboBox.IsEditable" Value="true">
                    <Setter Property="Control.IsTabStop" Value="false"/>
                    <Setter Property="Control.Padding" Value="2"/>
                    <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ScrollBarButton2" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.Padding" Value="1"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="0,1,0,0"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"
                        Property="Border.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}" Property="Border.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                                <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56"/>
                                <Setter TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"
                        Property="Border.BorderBrush"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent3" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.Background" Value="Transparent"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}"
                       Width="{TemplateBinding FrameworkElement.Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbVertical2" TargetType="{x:Type Thumb}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="true"
                       Width="{TemplateBinding FrameworkElement.Width}" Fill="White"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Value="{DynamicResource ScrollBar.Pressed.Thumb}" Property="Shape.Fill"/>
                            </Trigger>
                            <Trigger Property="Thumb.IsDragging" Value="true">
                                <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}" Property="Shape.Fill"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxStyle_dropdown" TargetType="{x:Type ComboBox}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Control.Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Control.Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="ComboBox.IsEditable" Value="true">
                    <Setter Property="Control.IsTabStop" Value="false"/>
                    <Setter Property="Control.Padding" Value="2"/>
                    <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonStyle_dropdown1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="ButtonBase.ClickMode" Value="Press"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" RenderTransformOrigin="0.5,0.5"
                    Margin="0.267,0,10.566,0" BorderThickness="1" HorizontalAlignment="Stretch">
                            <UIElement.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform AngleX="-32"/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </UIElement.RenderTransform>
                            <Border x:Name="splitBorder" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Stretch"
                      BorderThickness="0" BorderBrush="Transparent" Background="#FF242424"
                      RenderTransformOrigin="0.5,0.5" Cursor="Hand" OpacityMask="{x:Null}">
                                <UIElement.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform AngleX="0"/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </UIElement.RenderTransform>
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center"
                      Fill="{StaticResource ComboBox.Static.Glyph}"
                      Data="F1 M 0,0 L 2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0 Z"
                      Visibility="Hidden"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"
                        Property="Border.BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}" Property="Shape.Fill"/>
                                <Setter TargetName="splitBorder" Property="Border.Background" Value="#FF494949"/>
                                <Setter TargetName="splitBorder" Property="Border.BorderThickness" Value="0"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"
                        Property="Border.BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" Property="Shape.Fill"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"
                        Property="Border.BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}" Property="Shape.Fill"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"
                        Property="Border.BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"
                        Property="Border.Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate2" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="17.2"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="0"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom" OpacityMask="Black" HorizontalAlignment="Stretch"
               RenderTransformOrigin="0.5,0.5"
               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <UIElement.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform AngleX="0"/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </UIElement.RenderTransform>
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                         FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                         FrameworkElement.Margin="0,0,8,0" FrameworkElement.HorizontalAlignment="Left"
                                         FrameworkElement.MinWidth="126" FrameworkElement.Width="126">
                        <Border x:Name="dropDownBorder" BorderThickness="0" Margin="0" Background="#FF272727"
                    BorderBrush="{x:Null}">
                            <ScrollViewer x:Name="DropDownScrollViewer" Height="150"
                            Template="{DynamicResource ScrollViewerControlTemplate1}" HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Visible" BorderBrush="{TemplateBinding Control.BorderBrush}">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Center" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}" Grid.ColumnSpan="2"
                      Style="{DynamicResource ToggleButtonStyle_dropdown1}" Height="Auto" Margin="0"
                      VerticalAlignment="Stretch" Foreground="#FFACFF00" HorizontalContentAlignment="Center"
                      HorizontalAlignment="Stretch" SnapsToDevicePixels="true"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                          ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                          IsHitTestVisible="false" Margin="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="Center"
                          Width="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                    <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                    <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000"/>
                </Trigger>
                <Trigger Property="ItemsControl.HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemsControl.IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Top"/>
                    <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Left"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="RepeatButtonTransparent4" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.Background" Value="Transparent"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Height="{TemplateBinding FrameworkElement.Height}" Width="{TemplateBinding FrameworkElement.Width}">
                            <Shape.Fill>
                                <ImageBrush/>
                            </Shape.Fill>
                        </Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </FrameworkElement.Resources>
    <Grid x:Name="page_system_monitor" Width="1920" Height="1080">
        <Grid x:Name="info_temp_fan_gpu" HorizontalAlignment="Left" Margin="80,311.6,0,375" Width="588" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Rectangle x:Name="system_temperature_layer1" Margin="32.2,32.2,265.8,71.2" Width="290" Height="290"
                 Fill="{Binding Foreground, ElementName=info_GPU}">
                <UIElement.OpacityMask>
                    <ImageBrush ImageSource="Image/Page_SystemMonitor/Temp/system_temperature_layer1_1.png"/>
                </UIElement.OpacityMask>
            </Rectangle>
            <Rectangle x:Name="system_temperature_layer2" Fill="White" Margin="32.2,32.2,265.8,71.2" Width="290"
                 Height="290">
                <UIElement.OpacityMask>
                    <ImageBrush ImageSource="Image/Page_SystemMonitor/Temp/system_temperature_layer2_2.png"/>
                </UIElement.OpacityMask>
            </Rectangle>
            <Image x:Name="Image_Page_SystemMonitor_system_gpu_temperature_layer3_png" Margin="32.2,32.2,265.8,71.2"
             Source="Image/Page_SystemMonitor/Temp/system_gpu_temperature_layer3_1.png" Stretch="Fill"
             Height="44" Width="44"/>
            <TextBlock x:Name="T_100" HorizontalAlignment="Left" Height="19.6" Margin="78.4,85.4,0,0" TextWrapping="Wrap"
                 Text="100" VerticalAlignment="Top" Width="38.4" Foreground="White" FontSize="18.667"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"/>
            <TextBlock x:Name="T_80" HorizontalAlignment="Left" Height="19.6" Margin="50.4,148.2,0,0" TextWrapping="Wrap"
                 Text="80" VerticalAlignment="Top" Width="28.4" Foreground="White" FontSize="18.667"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"/>
            <TextBlock x:Name="T_60" HorizontalAlignment="Left" Height="19.6" Margin="63.2,0,0,149.2" TextWrapping="Wrap"
                 Text="60" VerticalAlignment="Bottom" Width="28.4" Foreground="White" FontSize="18.667"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"/>
            <TextBlock x:Name="T_40" HorizontalAlignment="Left" Height="19.6" Margin="111.2,0,0,98.4" TextWrapping="Wrap"
                 Text="40" VerticalAlignment="Bottom" Width="28.4" Foreground="White" FontSize="18.667"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"/>
            <TextBlock x:Name="T_20" HorizontalAlignment="Left" Height="19.6" Margin="186,0,0,87.01" TextWrapping="Wrap"
                 Text="20" VerticalAlignment="Bottom" Width="28.4" Foreground="White" FontSize="18.667"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"/>
            <TextBlock x:Name="T_0" HorizontalAlignment="Left" Height="19.6" Margin="258.867,0,0,120.41"
                 TextWrapping="Wrap" Text="0" VerticalAlignment="Bottom" Width="28.4" Foreground="White"
                 FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"/>
            <TextBlock x:Name="T_unit" Height="19.6" Margin="215.4,132.45,0,0" TextWrapping="Wrap" Text="°C"
                 VerticalAlignment="Top" Foreground="White" FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"
                 HorizontalAlignment="Left" Width="28.2"/>
            <TextBlock x:Name="T_temp" Height="24.8" Margin="116.8,62.99,0,0" TextWrapping="Wrap" Text="Temperature"
                 VerticalAlignment="Top" Foreground="White" FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"
                 HorizontalAlignment="Left" Width="170.467"/>
            <Rectangle x:Name="GPUTemp_needle_layer1" Margin="31.009,33.55,269.142,74.15" RenderTransformOrigin="0.5,0.5"
                 Width="290" Height="289" Fill="{Binding Foreground, ElementName=info_GPU}">
                <UIElement.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="135"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </UIElement.RenderTransform>
                <UIElement.OpacityMask>
                    <ImageBrush ImageSource="Image/Page_SystemMonitor/Temp/system_temperature_needle_layer1_2.png"/>
                </UIElement.OpacityMask>
            </Rectangle>
            <Rectangle x:Name="GPUTemp_needle_layer2" Fill="White" Margin="32.2,32.2,265.8,71.2" Width="290" Height="290"
                 RenderTransformOrigin="0.5,0.5">
                <UIElement.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="135"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </UIElement.RenderTransform>
                <UIElement.OpacityMask>
                    <ImageBrush ImageSource="Image/Page_SystemMonitor/Temp/system_temperature_needle_layer2_2.png"/>
                </UIElement.OpacityMask>
            </Rectangle>
            <TextBlock x:Name="GPUTemp_value" Height="37.69" Margin="142.467,114.36,0,0" TextWrapping="Wrap" Text="0"
                 VerticalAlignment="Top" Foreground="White" FontSize="32" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"
                 HorizontalAlignment="Left" Width="67.933" TextAlignment="Center"/>
        </Grid>
        <Grid x:Name="info_temp_fan_cpu" HorizontalAlignment="Right" Margin="0,316.6,90,370" Width="588"
          RenderTransformOrigin="0.5,0.5">
            <UIElement.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="1.2" ScaleX="-1.2"/>
                    <SkewTransform AngleY="0" AngleX="0"/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform/>
                </TransformGroup>
            </UIElement.RenderTransform>
            <Rectangle x:Name="system_temperature_layer3" Margin="32.2,32.2,265.8,71.2" Width="290" Height="290"
                 Fill="{Binding BorderBrush, ElementName=userControl}">
                <UIElement.OpacityMask>
                    <ImageBrush ImageSource="Image/Page_SystemMonitor/Temp/system_temperature_layer1_1.png"/>
                </UIElement.OpacityMask>
            </Rectangle>
            <Rectangle x:Name="system_temperature_layer4" Fill="White" Margin="32.2,32.2,265.8,71.2" Width="290"
                 Height="290">
                <UIElement.OpacityMask>
                    <ImageBrush ImageSource="Image/Page_SystemMonitor/Temp/system_temperature_layer2_2.png"/>
                </UIElement.OpacityMask>
            </Rectangle>
            <Image x:Name="Image_Page_SystemMonitor_system_gpu_temperature_layer3_png1" Margin="32.2,32.2,265.8,71.2"
             Source="Image/Page_SystemMonitor/Temp/system_cpu_temperature_layer3_1.png" Stretch="Fill"
             Height="44" Width="44" RenderTransformOrigin="0.5,0.5">
                <UIElement.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="1" ScaleX="-1"/>
                        <SkewTransform AngleY="0" AngleX="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </UIElement.RenderTransform>
            </Image>
            <TextBlock x:Name="T_1" HorizontalAlignment="Left" Height="19.6" Margin="77.2,80.8,0,0" TextWrapping="Wrap"
                 Text="100" VerticalAlignment="Top" Width="38.4" Foreground="White" FontSize="18.667"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" RenderTransformOrigin="0.5,0.5">
        <UIElement.RenderTransform>
          <TransformGroup>
            <ScaleTransform ScaleY="1" ScaleX="-1"/>
            <SkewTransform AngleY="0" AngleX="0"/>
            <RotateTransform Angle="0"/>
            <TranslateTransform/>
          </TransformGroup>
        </UIElement.RenderTransform>
            </TextBlock>
            <TextBlock x:Name="T_2" HorizontalAlignment="Left" Height="19.6" Margin="41,146.2,0,0" TextWrapping="Wrap"
                 Text="80" VerticalAlignment="Top" Width="28.4" Foreground="White" FontSize="18.667"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" RenderTransformOrigin="0.5,0.5">
        <UIElement.RenderTransform>
          <TransformGroup>
            <ScaleTransform ScaleY="1" ScaleX="-1"/>
            <SkewTransform AngleY="0" AngleX="0"/>
            <RotateTransform Angle="0"/>
            <TranslateTransform/>
          </TransformGroup>
        </UIElement.RenderTransform>
            </TextBlock>
            <TextBlock x:Name="T_3" HorizontalAlignment="Left" Height="19.6" Margin="54,0,0,149.8" TextWrapping="Wrap"
                 Text="60" VerticalAlignment="Bottom" Width="28.4" Foreground="White" FontSize="18.667"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" RenderTransformOrigin="0.5,0.5">
        <UIElement.RenderTransform>
          <TransformGroup>
            <ScaleTransform ScaleY="1" ScaleX="-1"/>
            <SkewTransform AngleY="0" AngleX="0"/>
            <RotateTransform Angle="0"/>
            <TranslateTransform/>
          </TransformGroup>
        </UIElement.RenderTransform>
            </TextBlock>
            <TextBlock x:Name="T_4" HorizontalAlignment="Left" Height="19.6" Margin="100.8,0,0,99" TextWrapping="Wrap"
                 Text="40" VerticalAlignment="Bottom" Width="28.4" Foreground="White" FontSize="18.667"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" RenderTransformOrigin="0.5,0.5">
        <UIElement.RenderTransform>
          <TransformGroup>
            <ScaleTransform ScaleY="1" ScaleX="-1"/>
            <SkewTransform AngleY="0" AngleX="0"/>
            <RotateTransform Angle="0"/>
            <TranslateTransform/>
          </TransformGroup>
        </UIElement.RenderTransform>
            </TextBlock>
            <TextBlock x:Name="T_5" HorizontalAlignment="Left" Height="19.6" Margin="179.4,0,0,87.01" TextWrapping="Wrap"
                 Text="20" VerticalAlignment="Bottom" Width="28.4" Foreground="White" FontSize="18.667"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" RenderTransformOrigin="0.5,0.5">
        <UIElement.RenderTransform>
          <TransformGroup>
            <ScaleTransform ScaleY="1" ScaleX="-1"/>
            <SkewTransform AngleY="0" AngleX="0"/>
            <RotateTransform Angle="0"/>
            <TranslateTransform/>
          </TransformGroup>
        </UIElement.RenderTransform>
            </TextBlock>
            <TextBlock x:Name="T_6" HorizontalAlignment="Left" Height="19.6" Margin="239.267,0,0,121.01"
                 TextWrapping="Wrap" Text="0" VerticalAlignment="Bottom" Width="28.4" Foreground="White"
                 FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" RenderTransformOrigin="0.5,0.5">
        <UIElement.RenderTransform>
          <TransformGroup>
            <ScaleTransform ScaleY="1" ScaleX="-1"/>
            <SkewTransform AngleY="0" AngleX="0"/>
            <RotateTransform Angle="0"/>
            <TranslateTransform/>
          </TransformGroup>
        </UIElement.RenderTransform>
            </TextBlock>
            <TextBlock x:Name="T_cpu_temp_value" Height="31.95" Margin="148,117.493,0,0" TextWrapping="Wrap" Text="45"
                 VerticalAlignment="Top" Foreground="White" FontSize="29.333" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"
                 HorizontalAlignment="Left" Width="60.4" TextAlignment="Center" RenderTransformOrigin="0.5,0.5">
        <UIElement.RenderTransform>
          <TransformGroup>
            <ScaleTransform ScaleY="1" ScaleX="-1"/>
            <SkewTransform AngleY="0" AngleX="0"/>
            <RotateTransform Angle="0"/>
            <TranslateTransform/>
          </TransformGroup>
        </UIElement.RenderTransform>
            </TextBlock>
            <TextBlock x:Name="T_unit1" Height="19.6" Margin="102.667,133.517,0,0" TextWrapping="Wrap" Text="°C"
                 VerticalAlignment="Top" Foreground="White" FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"
                 HorizontalAlignment="Left" Width="43.2" RenderTransformOrigin="0.5,0.5">
        <UIElement.RenderTransform>
          <TransformGroup>
            <ScaleTransform ScaleY="1" ScaleX="-1"/>
            <SkewTransform AngleY="0" AngleX="0"/>
            <RotateTransform Angle="0"/>
            <TranslateTransform/>
          </TransformGroup>
        </UIElement.RenderTransform>
            </TextBlock>
            <TextBlock x:Name="T_temp1" Height="24.8" Margin="116.8,62.99,0,0" TextWrapping="Wrap" Text="Temperature"
                 VerticalAlignment="Top" Foreground="White" FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"
                 HorizontalAlignment="Left" Width="170.467" RenderTransformOrigin="0.5,0.5" TextAlignment="Right">
        <UIElement.RenderTransform>
          <TransformGroup>
            <ScaleTransform ScaleY="1" ScaleX="-1"/>
            <SkewTransform AngleY="0" AngleX="0"/>
            <RotateTransform Angle="0"/>
            <TranslateTransform/>
          </TransformGroup>
        </UIElement.RenderTransform>
            </TextBlock>
            <Rectangle x:Name="CPUTemp_needle_layer1" Margin="31.009,33.55,269.142,74.15" RenderTransformOrigin="0.5,0.5"
                 Fill="{Binding Fill, ElementName=system_temperature_layer3}">
                <UIElement.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="135"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </UIElement.RenderTransform>
                <UIElement.OpacityMask>
                    <ImageBrush ImageSource="Image/Page_SystemMonitor/Temp/system_temperature_needle_layer1_2.png"/>
                </UIElement.OpacityMask>
            </Rectangle>
            <Rectangle x:Name="CPUTemp_needle_layer2" Fill="White" Margin="32.2,32.2,265.8,71.2" Width="290" Height="290"
                 RenderTransformOrigin="0.5,0.5">
                <UIElement.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="135"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </UIElement.RenderTransform>
                <UIElement.OpacityMask>
                    <ImageBrush ImageSource="Image/Page_SystemMonitor/Temp/system_temperature_needle_layer2_2.png"/>
                </UIElement.OpacityMask>
            </Rectangle>
        </Grid>
        <Grid x:Name="Info_Clock" Margin="0" VerticalAlignment="Top" Height="642.4">
            <Image x:Name="Image_Page_SystemMonitor_clock_clock_dotted_line_png" Margin="364.6,12.4,0,0"
             Source="Image/Page_SystemMonitor/clock/clock_dotted_line_2.png" Stretch="Fill"
             HorizontalAlignment="Left" VerticalAlignment="Top" Width="1181" Height="518"/>
            <Grid x:Name="GPU_VRAM_Clock_layer" Width="300" Height="507" HorizontalAlignment="Left"
            Margin="646.8,3.5,0,131.9">
                <Panel.Background>
                    <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/gpu_mem_clock_layer1.png"/>
                </Panel.Background>
                <Rectangle x:Name="R_mem5" Height="505" Margin="0,0,0,-16.8" Stroke="Black" VerticalAlignment="Bottom"
                   Width="276" HorizontalAlignment="Right" RenderTransformOrigin="1.004,0.5" Visibility="Hidden"
                   Fill="{Binding Fill, ElementName=R_mem1}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer2_full.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_mem4" Height="456" Margin="0,0,0,-16.8" Stroke="Black" VerticalAlignment="Bottom"
                   Width="263" HorizontalAlignment="Right" Visibility="Hidden"
                   Fill="{Binding Fill, ElementName=R_mem1}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer2_4006.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_mem3" Height="401" Margin="0,0,0,-16.8" Stroke="Black" VerticalAlignment="Bottom"
                   Width="249" HorizontalAlignment="Right" Visibility="Hidden"
                   Fill="{Binding Fill, ElementName=R_mem1}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer2_2999.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_mem2" Height="344" Stroke="Black" VerticalAlignment="Bottom" Width="235"
                   HorizontalAlignment="Right" Margin="0,0,0,-16.8" Visibility="Hidden"
                   Fill="{Binding Fill, ElementName=R_mem1}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer2_810.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_mem1" Height="288" Margin="0,0,0,-16.8" Stroke="Black" VerticalAlignment="Bottom"
                   Width="220" HorizontalAlignment="Right" Visibility="Hidden"
                   Fill="{Binding Foreground, ElementName=info_GPU}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer2_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_mem1_layer" Margin="0,214.333,0,102.667" Stroke="Black" Width="240"
                   HorizontalAlignment="Right" Fill="{Binding Fill, ElementName=R_mem1}"
                   Visibility="{Binding Visibility, ElementName=R_mem1}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer4_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_mem2_layer" Margin="0,159.4,-0.533,157.6" Stroke="Black" Width="255"
                   HorizontalAlignment="Right" Height="190" Fill="{Binding Fill, ElementName=R_mem1}"
                   Visibility="{Binding Visibility, ElementName=R_mem2}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer4_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_mem3_layer" Margin="0,103.4,-0.266,213.6" Stroke="Black" Width="268"
                   HorizontalAlignment="Right" Height="190" Fill="{Binding Fill, ElementName=R_mem1}"
                   Visibility="{Binding Visibility, ElementName=R_mem3}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer4_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_mem4_layer" Margin="0,48.466,-1.333,0" Stroke="Black" Width="286.8"
                   HorizontalAlignment="Right" Height="190" VerticalAlignment="Top"
                   Fill="{Binding Fill, ElementName=R_mem1}" Visibility="{Binding Visibility, ElementName=R_mem4}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer4_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_mem5_layer" Margin="-1.267,-0.466,-1.733,0" Stroke="Black" Width="303"
                   HorizontalAlignment="Right" Height="190" VerticalAlignment="Top"
                   Fill="{Binding Fill, ElementName=R_mem1}" Visibility="{Binding Visibility, ElementName=R_mem5}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer4_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <TextBlock x:Name="VRAMClock_Value" HorizontalAlignment="Right" Margin="0,0,29.734,124.492"
                   TextWrapping="Wrap" Text="2000" VerticalAlignment="Bottom" Width="84.8"
                   FontFamily="Microsoft Sans Serif" FontSize="37.333" RenderTransformOrigin="0.5,0.5"
                   TextAlignment="Right" Foreground="White" Visibility="{Binding Visibility, ElementName=R_mem1}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform/>
              <SkewTransform AngleY="7"/>
              <RotateTransform/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy" HorizontalAlignment="Right" Height="23.2" Margin="0,0,9.201,99.95"
                   TextWrapping="Wrap" Text="MHz" VerticalAlignment="Bottom" Width="38.667"
                   FontFamily="Microsoft Sans Serif" FontSize="16" RenderTransformOrigin="0.5,0.5"
                   TextAlignment="Right" Foreground="White" Visibility="{Binding Visibility, ElementName=R_mem1}"/>
                <TextBlock x:Name="T_clock_1_Copy1" HorizontalAlignment="Right" Margin="0,0,31.067,183.51" TextWrapping="Wrap"
                   VerticalAlignment="Bottom" Width="84.8" FontFamily="Microsoft Sans Serif" FontSize="37.333"
                   RenderTransformOrigin="0.5,0.5" TextAlignment="Right" Foreground="White"
                   Text="{Binding Text, ElementName=VRAMClock_Value}"
                   Visibility="{Binding Visibility, ElementName=R_mem2}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform/>
              <SkewTransform AngleY="7"/>
              <RotateTransform/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy2" HorizontalAlignment="Right" Height="23.2" Margin="0,0,10.534,153.55"
                   TextWrapping="Wrap" Text="MHz" VerticalAlignment="Bottom" Width="38.667"
                   FontFamily="Microsoft Sans Serif" FontSize="16" RenderTransformOrigin="0.5,0.5"
                   TextAlignment="Right" Foreground="White" Visibility="{Binding Visibility, ElementName=R_mem2}"/>
                <TextBlock x:Name="T_clock_1_Copy3" HorizontalAlignment="Right" Margin="0,229.734,31.867,243.528"
                   TextWrapping="Wrap" Width="84.8" FontFamily="Microsoft Sans Serif" FontSize="37.333"
                   RenderTransformOrigin="0.5,0.5" TextAlignment="Right" Foreground="White"
                   Text="{Binding Text, ElementName=VRAMClock_Value}"
                   Visibility="{Binding Visibility, ElementName=R_mem3}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform/>
              <SkewTransform AngleY="7"/>
              <RotateTransform/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy4" HorizontalAlignment="Right" Height="23.2" Margin="0,0,11.334,209.817"
                   TextWrapping="Wrap" Text="MHz" VerticalAlignment="Bottom" Width="38.667"
                   FontFamily="Microsoft Sans Serif" FontSize="16" RenderTransformOrigin="0.5,0.5"
                   TextAlignment="Right" Foreground="White" Visibility="{Binding Visibility, ElementName=R_mem3}"/>
                <TextBlock x:Name="T_clock_1_Copy5" HorizontalAlignment="Right" Margin="0,172.772,30.267,0"
                   TextWrapping="Wrap" Width="84.8" FontFamily="Microsoft Sans Serif" FontSize="37.333"
                   RenderTransformOrigin="0.5,0.5" TextAlignment="Right" Foreground="White" VerticalAlignment="Top"
                   Text="{Binding Text, ElementName=VRAMClock_Value}"
                   Visibility="{Binding Visibility, ElementName=R_mem4}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform/>
              <SkewTransform AngleY="7"/>
              <RotateTransform/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy6" HorizontalAlignment="Right" Height="23.2" Margin="0,218.516,9.734,0"
                   TextWrapping="Wrap" Text="MHz" VerticalAlignment="Top" Width="38.667"
                   FontFamily="Microsoft Sans Serif" FontSize="16" RenderTransformOrigin="0.5,0.5"
                   TextAlignment="Right" Foreground="White" Visibility="{Binding Visibility, ElementName=R_mem4}"/>
                <TextBlock x:Name="T_clock_1_Copy7" HorizontalAlignment="Right" Margin="0,111.687,32.134,0"
                   TextWrapping="Wrap" Width="84.8" FontFamily="Microsoft Sans Serif" FontSize="37.333"
                   RenderTransformOrigin="0.5,0.5" TextAlignment="Right" Foreground="White" VerticalAlignment="Top"
                   Text="{Binding Text, ElementName=VRAMClock_Value}"
                   Visibility="{Binding Visibility, ElementName=R_mem5}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform/>
              <SkewTransform AngleY="7"/>
              <RotateTransform/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy8" HorizontalAlignment="Right" Height="23.2" Margin="0,168.649,11.601,0"
                   TextWrapping="Wrap" Text="MHz" VerticalAlignment="Top" Width="38.667"
                   FontFamily="Microsoft Sans Serif" FontSize="16" RenderTransformOrigin="0.5,0.5"
                   TextAlignment="Right" Foreground="White" Visibility="{Binding Visibility, ElementName=R_mem5}"/>
            </Grid>
            <Grid x:Name="CPU_RAM_Clock_layer" Width="300" Height="507" Margin="0,3.7,655,131.7"
            RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right">
                <UIElement.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="1" ScaleX="-1"/>
                        <SkewTransform AngleY="0" AngleX="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </UIElement.RenderTransform>
                <Panel.Background>
                    <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/gpu_mem_clock_layer1.png"/>
                </Panel.Background>
                <Rectangle x:Name="R_CPU_mem5" Height="505" Margin="0,0,0,-16.8" Stroke="Black" VerticalAlignment="Bottom"
                   Width="276" HorizontalAlignment="Right" RenderTransformOrigin="1.004,0.5" Visibility="Hidden"
                   Fill="{Binding Fill, ElementName=R_CPU_mem1}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer2_full.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_CPU_mem4" Height="456" Margin="0,0,0,-16.8" Stroke="Black" VerticalAlignment="Bottom"
                   Width="263" HorizontalAlignment="Right" Visibility="Hidden"
                   Fill="{Binding Fill, ElementName=R_CPU_mem1}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer2_4006.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_CPU_mem3" Height="401" Margin="0,0,0,-16.8" Stroke="Black" VerticalAlignment="Bottom"
                   Width="249" HorizontalAlignment="Right" Visibility="Hidden"
                   Fill="{Binding Fill, ElementName=R_CPU_mem1}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer2_2999.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_CPU_mem2" Height="344" Stroke="Black" VerticalAlignment="Bottom" Width="235"
                   HorizontalAlignment="Right" Margin="0,0,0,-16.8" Visibility="Hidden"
                   Fill="{Binding Fill, ElementName=R_CPU_mem1}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer2_810.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_CPU_mem1" Height="288" Margin="0,0,0,-16.8" Stroke="Black" VerticalAlignment="Bottom"
                   Width="220" HorizontalAlignment="Right" Visibility="Hidden"
                   Fill="{Binding BorderBrush, ElementName=userControl}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer2_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_CPUmem1_layer" Margin="0,214.333,0,102.667" Stroke="Black" Width="240"
                   HorizontalAlignment="Right" Fill="{Binding Fill, ElementName=R_CPU_mem1}"
                   Visibility="{Binding Visibility, ElementName=R_CPU_mem1}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer4_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_CPUmem2_layer" Margin="0,159.4,-0.533,157.6" Stroke="Black" Width="255"
                   HorizontalAlignment="Right" Height="190" Fill="{Binding Fill, ElementName=R_CPU_mem1}"
                   Visibility="{Binding Visibility, ElementName=R_CPU_mem2}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer4_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_CPUmem3_layer" Margin="0,103.4,-0.266,213.6" Stroke="Black" Width="268"
                   HorizontalAlignment="Right" Height="190" Fill="{Binding Fill, ElementName=R_CPU_mem1}"
                   Visibility="{Binding Visibility, ElementName=R_CPU_mem3}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer4_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_CPUmem4_layer" Margin="0,48.466,-1.333,0" Stroke="Black" Width="286.8"
                   HorizontalAlignment="Right" Height="190" VerticalAlignment="Top"
                   Fill="{Binding Fill, ElementName=R_CPU_mem1}"
                   Visibility="{Binding Visibility, ElementName=R_CPU_mem4}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer4_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="R_CPUmem5_layer" Margin="-1.267,-0.466,-1.733,0" Stroke="Black" Width="303"
                   HorizontalAlignment="Right" Height="190" VerticalAlignment="Top"
                   Fill="{Binding Fill, ElementName=R_CPU_mem1}"
                   Visibility="{Binding Visibility, ElementName=R_CPU_mem5}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/mem_clock/clock_mem_layer4_405.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <TextBlock x:Name="RAMClock_Value" HorizontalAlignment="Right" Margin="0,0,29.734,124.492" TextWrapping="Wrap"
                   Text="2000" VerticalAlignment="Bottom" Width="84.8" FontFamily="Microsoft Sans Serif"
                   FontSize="37.333" RenderTransformOrigin="0.5,0.5" TextAlignment="Right" Foreground="White"
                   Visibility="{Binding Visibility, ElementName=R_CPUmem1_layer}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="7" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy9" HorizontalAlignment="Right" Height="23.2" Margin="0,0,9.201,99.95"
                   TextWrapping="Wrap" Text="MHz" VerticalAlignment="Bottom" Width="38.667"
                   FontFamily="Microsoft Sans Serif" FontSize="16" RenderTransformOrigin="0.5,0.5"
                   TextAlignment="Right" Foreground="White"
                   Visibility="{Binding Visibility, ElementName=R_CPUmem1_layer}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy10" HorizontalAlignment="Right" Margin="0,0,31.067,183.51"
                   TextWrapping="Wrap" VerticalAlignment="Bottom" Width="84.8" FontFamily="Microsoft Sans Serif"
                   FontSize="37.333" RenderTransformOrigin="0.5,0.5" TextAlignment="Right" Foreground="White"
                   Text="{Binding Text, ElementName=RAMClock_Value}"
                   Visibility="{Binding Visibility, ElementName=R_CPUmem2_layer}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="7" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy11" HorizontalAlignment="Right" Height="23.2" Margin="0,0,10.534,153.55"
                   TextWrapping="Wrap" Text="MHz" VerticalAlignment="Bottom" Width="38.667"
                   FontFamily="Microsoft Sans Serif" FontSize="16" RenderTransformOrigin="0.5,0.5"
                   TextAlignment="Right" Foreground="White"
                   Visibility="{Binding Visibility, ElementName=R_CPUmem2_layer}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy12" HorizontalAlignment="Right" Margin="0,229.734,31.867,243.528"
                   TextWrapping="Wrap" Width="84.8" FontFamily="Microsoft Sans Serif" FontSize="37.333"
                   RenderTransformOrigin="0.5,0.5" TextAlignment="Right" Foreground="White"
                   Text="{Binding Text, ElementName=RAMClock_Value}"
                   Visibility="{Binding Visibility, ElementName=R_CPUmem3_layer}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="7" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy13" HorizontalAlignment="Right" Height="23.2" Margin="0,0,11.334,209.817"
                   TextWrapping="Wrap" Text="MHz" VerticalAlignment="Bottom" Width="38.667"
                   FontFamily="Microsoft Sans Serif" FontSize="16" RenderTransformOrigin="0.5,0.5"
                   TextAlignment="Right" Foreground="White"
                   Visibility="{Binding Visibility, ElementName=R_CPUmem3_layer}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy14" HorizontalAlignment="Right" Margin="0,172.772,30.267,0"
                   TextWrapping="Wrap" Width="84.8" FontFamily="Microsoft Sans Serif" FontSize="37.333"
                   RenderTransformOrigin="0.5,0.5" TextAlignment="Right" Foreground="White" VerticalAlignment="Top"
                   Text="{Binding Text, ElementName=RAMClock_Value}"
                   Visibility="{Binding Visibility, ElementName=R_CPUmem4_layer}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="7" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy15" HorizontalAlignment="Right" Height="23.2" Margin="0,218.516,9.734,0"
                   TextWrapping="Wrap" Text="MHz" VerticalAlignment="Top" Width="38.667"
                   FontFamily="Microsoft Sans Serif" FontSize="16" RenderTransformOrigin="0.5,0.5"
                   TextAlignment="Right" Foreground="White"
                   Visibility="{Binding Visibility, ElementName=R_CPUmem4_layer}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy16" HorizontalAlignment="Right" Margin="0,111.687,32.134,0"
                   TextWrapping="Wrap" Width="84.8" FontFamily="Microsoft Sans Serif" FontSize="37.333"
                   RenderTransformOrigin="0.5,0.5" TextAlignment="Right" Foreground="White" VerticalAlignment="Top"
                   Text="{Binding Text, ElementName=RAMClock_Value}"
                   Visibility="{Binding Visibility, ElementName=R_CPUmem5_layer}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="7" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_clock_1_Copy17" HorizontalAlignment="Right" Height="23.2" Margin="0,168.649,11.601,0"
                   TextWrapping="Wrap" Text="MHz" VerticalAlignment="Top" Width="38.667"
                   FontFamily="Microsoft Sans Serif" FontSize="16" RenderTransformOrigin="0.5,0.5"
                   TextAlignment="Right" Foreground="White"
                   Visibility="{Binding Visibility, ElementName=R_CPUmem5_layer}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
            </Grid>
            <TextBlock x:Name="T_VRAM" Margin="717.067,150.828,0,0" TextWrapping="Wrap" Text="VRAM Clock"
                 Foreground="White" FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6"
                 VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" Width="128.933">
        <UIElement.RenderTransform>
          <TransformGroup>
            <ScaleTransform/>
            <SkewTransform AngleY="10"/>
            <RotateTransform/>
            <TranslateTransform/>
          </TransformGroup>
        </UIElement.RenderTransform>
            </TextBlock>
            <TextBlock x:Name="T_RAM" Margin="0,150.028,716.8,0" TextWrapping="Wrap" Text="Memory Clock"
                 Foreground="White" FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6"
                 VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" Width="128.933">
        <UIElement.RenderTransform>
          <TransformGroup>
            <ScaleTransform/>
            <SkewTransform AngleY="-10"/>
            <RotateTransform/>
            <TranslateTransform/>
          </TransformGroup>
        </UIElement.RenderTransform>
            </TextBlock>
            <UControl:UserControl_CoreClock x:Name="UC_GPUCoreClock" Margin="0,183.734,972.799,130.665" Width="376" Height="328"
                                      HorizontalAlignment="Right" BorderBrush="{Binding Foreground, ElementName=info_GPU}"/>
            <Grid x:Name="info_Clock_GPU" Margin="0,0,954.6,0">
                <TextBlock x:Name="GPU_Unit2" Margin="0,0,110.4,92.8" TextWrapping="Wrap" Text="%" Foreground="White"
                   FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6" VerticalAlignment="Bottom"
                   TextAlignment="Right" HorizontalAlignment="Right" Width="15.999"/>
                <TextBlock x:Name="info_GPU" Margin="426,0,409.4,256.25" TextWrapping="Wrap" Text="GPU" Foreground="#FF6FB219"
                   FontSize="40" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" TextAlignment="Right" Height="45.15"
                   VerticalAlignment="Bottom"/>
                <TextBlock x:Name="GPU_NAME_Value" Margin="61,269.638,0,0" TextWrapping="Wrap" Foreground="White"
                   FontSize="22.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" HorizontalAlignment="Left" Width="289"
                   VerticalAlignment="Top"/>
                <Image x:Name="ic_gpu_name" HorizontalAlignment="Left" Margin="10,260.141,0,0"
               Source="Image/Page_SystemMonitor/CPUGPUSetting/ic_gpu_setting.png" Stretch="Fill" Width="40"
               Height="40" VerticalAlignment="Top"/>
                <TextBlock x:Name="GPU_Unit" Margin="0,275.691,405.134,0" TextWrapping="Wrap" Text="MHz" Foreground="White"
                   FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6" VerticalAlignment="Top"
                   HorizontalAlignment="Right" Width="37.733" Visibility="Hidden"/>
                <TextBlock x:Name="T_Utilization" Margin="0,0,183.466,119.13" TextWrapping="Wrap" Text="Utilization"
                   Foreground="White" FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6"
                   VerticalAlignment="Bottom" TextAlignment="Right" HorizontalAlignment="Right" Width="141.199"
                   RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform/>
              <SkewTransform AngleY="12"/>
              <RotateTransform/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_GPU_BOOST" Margin="428.8,192.541,452.067,0" TextWrapping="Wrap" Text="Core Boost"
                   Foreground="White" FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6"
                   VerticalAlignment="Top" Visibility="Hidden"/>
                <TextBlock x:Name="GPU_Unit1" Margin="0,190.691,312.134,0" TextWrapping="Wrap" Foreground="White"
                   FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6" VerticalAlignment="Top"
                   HorizontalAlignment="Right" Width="37.733" Visibility="Hidden"><Run Text="MHz"/></TextBlock>
                <TextBlock x:Name="GPU_BASE_Value" Margin="437.533,266.107,442.867,0" TextWrapping="Wrap"
                   Foreground="White" FontSize="26.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" VerticalAlignment="Top"
                   TextAlignment="Center" Visibility="Hidden"><Run Text="0"/></TextBlock>
                <TextBlock x:Name="GPU_BOOST_Value" Margin="0,181.107,359.867,0" TextWrapping="Wrap" Text="0"
                   Foreground="White" FontSize="26.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" VerticalAlignment="Top"
                   TextAlignment="Center" HorizontalAlignment="Right" Width="85" Visibility="Hidden"/>
                <TextBlock x:Name="T_GPU_BASE" TextWrapping="Wrap" Text="Core Base"
                            Foreground="White" FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6"
                            VerticalAlignment="Top" HorizontalAlignment="Left" Width="79.333" Visibility="Hidden"/>
                <TextBlock x:Name="GPU_util_value" Margin="0,0,128.935,99.941" TextWrapping="Wrap" Text="100"
                   Foreground="White" FontSize="21.333" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="21.46"
                   VerticalAlignment="Bottom" TextAlignment="Center" HorizontalAlignment="Right" Width="49.134"
                   RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform/>
              <SkewTransform AngleY="10"/>
              <RotateTransform/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <Rectangle x:Name="gpu_unilization_layer1" Height="156" Margin="435.533,0,4.867,104.382"
                   VerticalAlignment="Bottom" Width="525" Visibility="Visible"
                   Fill="{Binding Foreground, ElementName=info_GPU}">
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/clock/clock_dotted_line_color_1.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Path Data="M 7.0210103,1.3713527 C 20.938159,1.3937318 126.35041,1.5632375 126.35041,1.5632375 181.55979,102.34604 380.3209,141.17487 521.43795,141.94572 "
              Height="143.436" Margin="437.519,0,6.22,115.991" VerticalAlignment="Bottom" Stroke="#FF000100"
              StrokeDashArray="1 2 1 2" StrokeThickness="2" StrokeStartLineCap="Square" StrokeEndLineCap="Square"
              Stretch="Fill" StrokeDashOffset="2" Visibility="Hidden"/>
                <Grid x:Name="gpu_unilization_layer3" HorizontalAlignment="Right" Height="152" Margin="0,0,32.8,104.25"
              VerticalAlignment="Bottom" Width="0">
                    <Rectangle x:Name="gpu_unilization_layer2" Height="152" Margin="0" VerticalAlignment="Bottom" Width="374"
                     HorizontalAlignment="Right" Fill="{Binding Foreground, ElementName=info_GPU}">
                        <UIElement.OpacityMask>
                            <ImageBrush ImageSource="Image/Page_SystemMonitor/clock/gpu_utilization_layer2_1.png"/>
                        </UIElement.OpacityMask>
                    </Rectangle>
                </Grid>
                <Image x:Name="Image_Page_SystemMonitor_clock_gpu_clock_layer3_png" HorizontalAlignment="Right"
               Margin="0,185.2,16.566,129.2" Source="Image/Page_SystemMonitor/clock/gpu_clock_layer3.png"
               Stretch="Fill" Width="376"/>
                <TextBlock x:Name="GPU_Core_Value2" Margin="0,0,49.999,107.699" TextWrapping="Wrap" FontSize="80"
                   FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" VerticalAlignment="Bottom" TextAlignment="Right"
                   HorizontalAlignment="Right" Width="222.667" RenderTransformOrigin="0.5,0.5"
                   Text="{Binding Text, ElementName=GPU_Core_Value}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="-1" ScaleX="1"/>
              <SkewTransform AngleX="0" AngleY="13"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                    <TextBlock.Foreground>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#00000000" Offset="0.524"/>
                            <GradientStop Offset="1" Color="#7F7D7D7D"/>
                        </LinearGradientBrush>
                    </TextBlock.Foreground>
                </TextBlock>
                <TextBlock x:Name="GPU_Core_Value1" Margin="0,0,43,149.634" TextWrapping="Wrap" FontSize="80"
                   FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" VerticalAlignment="Bottom" TextAlignment="Right"
                   HorizontalAlignment="Right" Width="222.667" RenderTransformOrigin="0.5,0.5"
                   Text="{Binding Text, ElementName=GPU_Core_Value}" Foreground="{x:Null}"/>
                <TextBlock x:Name="GPU_Core_Value" Margin="0,0,50.756,186.356" TextWrapping="Wrap" Text="4444" Foreground="White"
                   FontSize="65" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" VerticalAlignment="Bottom" TextAlignment="Right"
                   HorizontalAlignment="Right" Width="269.644" RenderTransformOrigin="0.5,0.5" Height="74.99">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform/>
              <SkewTransform AngleY="13"/>
              <RotateTransform/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
            </Grid>
            <UControl:UserControl_CoreClock x:Name="UC_CPUCoreClock" Margin="0,181.334,578.799,133.065" Width="376" Height="328"
                                      HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5"
                                      BorderBrush="{Binding BorderBrush, ElementName=userControl}">
                <UIElement.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="1" ScaleX="-1"/>
                        <SkewTransform AngleY="0" AngleX="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </UIElement.RenderTransform>
            </UControl:UserControl_CoreClock>
            <Grid x:Name="info_Clock_CPU" Margin="952.2,4.8,0,0" RenderTransformOrigin="0.5,0.5">
                <UIElement.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="1" ScaleX="-1"/>
                        <SkewTransform AngleY="0" AngleX="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </UIElement.RenderTransform>
                <TextBlock x:Name="info_CPU" Margin="438.4,0,411.2,256.25" TextWrapping="Wrap" Text="CPU" FontSize="40"
                   FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" TextAlignment="Right" Height="45.15" VerticalAlignment="Bottom"
                   RenderTransformOrigin="0.5,0.5" Foreground="{Binding BorderBrush, ElementName=userControl}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="CPU_Unit3" Margin="0,0,246.801,117.4" TextWrapping="Wrap" Text="%" Foreground="White"
                   FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6" VerticalAlignment="Bottom"
                   TextAlignment="Right" HorizontalAlignment="Right" Width="15.999" RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="21" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="CPU_NAME_Value" Margin="59,245.2,0,316.309" TextWrapping="Wrap" Foreground="White"
                   FontSize="20" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" HorizontalAlignment="Left" Width="297"
                   RenderTransformOrigin="0.5,0.5" FlowDirection="RightToLeft">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <Image x:Name="ic_gpu_name1" HorizontalAlignment="Left" Margin="10,260.141,0,0"
               Source="Image/Page_SystemMonitor/CPUGPUSetting/ic_cpu_setting.png" Stretch="Fill" Width="40"
               Height="40" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                    <UIElement.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="-1"/>
                            <SkewTransform AngleY="0" AngleX="0"/>
                            <RotateTransform Angle="0"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </UIElement.RenderTransform>
                </Image>
                <TextBlock x:Name="T_CPU_TurboMin" Margin="0,274.608,405,0" TextWrapping="Wrap" Text="Core Base"
                   Foreground="White" FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6"
                   VerticalAlignment="Top" HorizontalAlignment="Right" Width="79.333" RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="CPU_Unit4" Margin="365,275.6,0,0" TextWrapping="Wrap" Text="MHz" Foreground="White"
                   FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6" VerticalAlignment="Top"
                   HorizontalAlignment="Left" Width="37.733" RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_CPU_util" Margin="0,0,27.8,87.8" TextWrapping="Wrap" Text="Utilization"
                   Foreground="White" FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6"
                   VerticalAlignment="Bottom" TextAlignment="Right" HorizontalAlignment="Right" Width="158.265"
                   RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="7" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="T_CPU_TurboMax" Margin="0,189.874,308,0" TextWrapping="Wrap" Text="Turbo Max"
                   Foreground="White" FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6"
                   VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" Width="86.933">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="CPU_Unit5" Margin="450,190.6,480.067,0" TextWrapping="Wrap" Text="MHz"
                   Foreground="White" FontSize="16" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="19.6"
                   VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="CPU_TurboMin_Value" Margin="402.866,263.707,455.4,0" TextWrapping="Wrap" Text="4000"
                   Foreground="White" FontSize="25" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" VerticalAlignment="Top"
                   TextAlignment="Center" RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="CPU_TurboMax_Value" Margin="0,182.532,372.8,0" TextWrapping="Wrap" Text="3000"
                   Foreground="White" FontSize="25" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" VerticalAlignment="Top"
                   TextAlignment="Center" HorizontalAlignment="Right" Width="110.334" RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="CPU_util_value" Margin="0,0,192.201,107.478" TextWrapping="Wrap" Text="100"
                   Foreground="White" FontSize="21.333" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Height="21.46"
                   VerticalAlignment="Bottom" TextAlignment="Center" HorizontalAlignment="Right" Width="49.397"
                   RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="10" AngleX="0"/>
              <RotateTransform Angle="1.785"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <Rectangle x:Name="cpu_unilization_layer1" Height="156" Margin="435.533,0,4.867,104.382"
                   VerticalAlignment="Bottom" Width="525" Visibility="Visible" RenderTransformOrigin="0.5,0.5"
                   Fill="{Binding BorderBrush, ElementName=UC_CPUCoreClock}">
                    <UIElement.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                            <SkewTransform AngleY="0" AngleX="0"/>
                            <RotateTransform Angle="0"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </UIElement.RenderTransform>
                    <UIElement.OpacityMask>
                        <ImageBrush ImageSource="Image/Page_SystemMonitor/clock/clock_dotted_line_color_1.png"/>
                    </UIElement.OpacityMask>
                </Rectangle>
                <Path Data="M 7.0210103,1.3713527 C 20.938159,1.3937318 126.35041,1.5632375 126.35041,1.5632375 181.55979,102.34604 380.3209,141.17487 521.43795,141.94572 "
              Height="143.436" Margin="437.519,0,6.22,115.991" VerticalAlignment="Bottom" Stroke="#FF000100"
              StrokeDashArray="1 2 1 2" StrokeThickness="2" StrokeStartLineCap="Square" StrokeEndLineCap="Square"
              Stretch="Fill" StrokeDashOffset="2" Visibility="Hidden" RenderTransformOrigin="0.5,0.5">
                    <UIElement.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="-1"/>
                            <SkewTransform AngleY="0" AngleX="0"/>
                            <RotateTransform Angle="0"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </UIElement.RenderTransform>
                </Path>
                <Grid x:Name="cpu_unilization_layer3" HorizontalAlignment="Right" Height="152" Margin="0,0,32.8,104.25"
              VerticalAlignment="Bottom" Width="0" RenderTransformOrigin="0.5,0.5">
                    <UIElement.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                            <SkewTransform AngleY="0" AngleX="0"/>
                            <RotateTransform Angle="0"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </UIElement.RenderTransform>
                    <Rectangle x:Name="cpu_unilization_layer2" Height="152" Margin="0" VerticalAlignment="Bottom" Width="374"
                     HorizontalAlignment="Right" Fill="{Binding BorderBrush, ElementName=UC_CPUCoreClock}">
                        <UIElement.OpacityMask>
                            <ImageBrush ImageSource="Image/Page_SystemMonitor/clock/gpu_utilization_layer2_1.png"/>
                        </UIElement.OpacityMask>
                    </Rectangle>
                </Grid>
                <Image x:Name="Image_Page_SystemMonitor_clock_gpu_clock_layer3_png1" HorizontalAlignment="Right"
               Margin="0,181.2,13.566,133.2" Source="Image/Page_SystemMonitor/clock/gpu_clock_layer3.png"
               Stretch="Fill" Width="376" RenderTransformOrigin="0.5,0.5">
                    <UIElement.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                            <SkewTransform AngleY="0" AngleX="0"/>
                            <RotateTransform Angle="0"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </UIElement.RenderTransform>
                </Image>
                <TextBlock x:Name="CPU_Core_Value2" Margin="0,0,50.666,107.699" TextWrapping="Wrap" FontSize="80"
                   FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" VerticalAlignment="Bottom" TextAlignment="Right"
                   HorizontalAlignment="Right" Width="222.667" RenderTransformOrigin="0.5,0.5"
                   FlowDirection="RightToLeft" Text="{Binding Text, ElementName=CPU_Core_Value}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="-1" ScaleX="-1"/>
              <SkewTransform AngleY="13" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                    <TextBlock.Foreground>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#00000000" Offset="0.524"/>
                            <GradientStop Offset="1" Color="#7F7D7D7D"/>
                        </LinearGradientBrush>
                    </TextBlock.Foreground>
                </TextBlock>
                <TextBlock x:Name="CPU_Core_Value1" Margin="0,0,33,150.4" TextWrapping="Wrap" FontSize="80"
                   FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" VerticalAlignment="Bottom" TextAlignment="Right"
                   HorizontalAlignment="Right" Width="234.8" RenderTransformOrigin="0.5,0.5"
                   FlowDirection="RightToLeft" Text="{Binding Text, ElementName=CPU_Core_Value}" Foreground="{x:Null}">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="0" AngleX="0"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="CPU_Core_Value" Margin="0,0,50.756,195.159" TextWrapping="Wrap" Text="4000" Foreground="White"
                   FontSize="65" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" VerticalAlignment="Bottom" TextAlignment="Right"
                   HorizontalAlignment="Right" Width="332.044" RenderTransformOrigin="0.5,0.5" Height="74.99"
                   FlowDirection="RightToLeft">
          <UIElement.RenderTransform>
            <TransformGroup>
              <ScaleTransform ScaleY="1" ScaleX="-1"/>
              <SkewTransform AngleY="13"/>
              <RotateTransform Angle="0"/>
              <TranslateTransform/>
            </TransformGroup>
          </UIElement.RenderTransform>
                </TextBlock>
            </Grid>
        </Grid>
        <Grid x:Name="info_status" HorizontalAlignment="Right" Height="383.6" Margin="0,0,45.4,-21.632"
          VerticalAlignment="Bottom" Width="433.6" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <TextBlock x:Name="T_CPU_W_Value" Margin="0,0,195.6,166.6" TextWrapping="Wrap" Text="0"
                 Foreground="White" FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" FlowDirection="RightToLeft" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="87"/>
            <Image x:Name="image_cpu_voltage" HorizontalAlignment="Left" Margin="61.745,0,0,163.8" Width="46"
             Height="46" Source="Image/Page_SystemMonitor/ic_system_cpu_voltage.png" VerticalAlignment="Bottom"/>
            <TextBlock x:Name="T_CPU_voltage" Margin="150.145,0,0,188.2" TextWrapping="Wrap" Text="CPU Core TDP"
                 Foreground="White" FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" FlowDirection="RightToLeft"
                 HorizontalAlignment="Left" Width="259.2" TextAlignment="Right" Height="23.6"
                 VerticalAlignment="Bottom"/>
            <TextBlock x:Name="T_CPU_voltage_unit" Margin="253,0,0,162.6" TextWrapping="Wrap" Text="W"
                 Foreground="White" FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" FlowDirection="RightToLeft"
                 HorizontalAlignment="Left" Width="27" TextAlignment="Right" Height="24"
                 VerticalAlignment="Bottom"/>
            <TextBlock x:Name="T_RAM_Size_Value" HorizontalAlignment="Right" Height="19.6" Margin="0,121,67,0"
                 TextWrapping="Wrap" Text="16
" VerticalAlignment="Top" Width="57.2" Foreground="White"
                 FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" FlowDirection="RightToLeft"
                 TextAlignment="Center"/>
            <TextBlock x:Name="T_RAM_Usage_Value" HorizontalAlignment="Left" Height="40.4" Margin="12.436,79.618,0,0"
                 TextWrapping="Wrap" VerticalAlignment="Top" Width="87.073" Foreground="White" FontSize="40"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" FlowDirection="RightToLeft"
                 Text="{Binding Value, ElementName=progressBar_RAM_Usage}"/>
            <TextBlock x:Name="T_RAM_Size" Height="45.2" Margin="134.827,118,123.1,0" TextWrapping="Wrap"
                 Text="Total RAM" VerticalAlignment="Top" Foreground="White" FontSize="16"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" FlowDirection="RightToLeft" TextAlignment="Right"/>
            <TextBlock x:Name="T_RAM_Size_unit" Height="19.6" Margin="0,121.127,30.946,0" TextWrapping="Wrap" Text="GB"
                 VerticalAlignment="Top" Foreground="White" FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"
                 FlowDirection="RightToLeft" TextAlignment="Right" HorizontalAlignment="Right" Width="40.218"/>
            <TextBlock x:Name="T_RAM_Size_Copy" Height="25.6" Margin="135,64.2,57,0" TextWrapping="Wrap"
                 Text="Memory Usage" VerticalAlignment="Top" Foreground="White" FontSize="18.667"
                 FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" FlowDirection="RightToLeft" TextAlignment="Right"/>
            <TextBlock x:Name="T_RAM_Size_unit_Copy" Height="19.6" Margin="101.927,95.024,0,0" TextWrapping="Wrap" Text="%"
                 VerticalAlignment="Top" Foreground="White" FontSize="18.667" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"
                 FlowDirection="RightToLeft" TextAlignment="Right" HorizontalAlignment="Left" Width="21.673"/>
            <ProgressBar x:Name="progressBar_RAM_Usage" Height="20.4" Margin="133.6,94.6,31.6,0" VerticalAlignment="Top"
                   Style="{DynamicResource ProgressBarStyle1_ram}" Foreground="White" BorderBrush="White"
                   SmallChange="1" Background="{x:Null}"/>
        </Grid>
    </Grid>
</UserControl>