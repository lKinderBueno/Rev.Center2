<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:gif ="http://wpfanimatedgif.codeplex.com"  
    xmlns:local="clr-namespace:Rev.Center2"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors" x:Name="window" x:Class="Rev.Center2.MainWindow"
        mc:Ignorable="d"
WindowStartupLocation="CenterScreen"
    Title="Rev.Center 2.0" Height="624.4" Width="1000" Foreground="{Binding Background, ElementName=window}" Background="Red" BorderBrush="{Binding Background, ElementName=window}" OpacityMask="{Binding Background, ElementName=window}"  WindowStyle="None" ResizeMode="NoResize" Closing="Window_Closing">

    <Window.Resources>

        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="RadioButtonStyle1_entertainment" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="path" Grid.ColumnSpan="2"
                                Data="M 6.6676679,118.66715 C 9.6683379,115.33392 145.8404,34.700784 148.13518,35.776978 393.33471,138.0007 318.26326,309.64176 239.0899,358.40174 239.0899,358.40174 6.4231495,216.73505 6.4231495,216.73505 6.4231495,216.73505 88.00104,182.66696 6.6676679,118.66715 Z"
                                Height="Auto" Margin="6.423,35.766,53.675,52.597" Stretch="Fill" StrokeThickness="0"
                                VerticalAlignment="Stretch" Fill="Black" Opacity="0.8" Focusable="true" Stroke="{x:Null}"/>
                            <Rectangle x:Name="btn_normal" Grid.Column="1" Margin="0" StrokeThickness="0" Width="369" Height="411"
                                HorizontalAlignment="Left" VerticalAlignment="Top" Opacity="1" IsHitTestVisible="false"
                                Stroke="{x:Null}" OpacityMask="{x:Null}">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/btn_mode_entertainment_layer1_selected_2.png"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="btn_selected" Grid.Column="1" Fill="{TemplateBinding BorderBrush}" Margin="0"
                                StrokeThickness="0" Width="369" Height="411" HorizontalAlignment="Left" VerticalAlignment="Top"
                                Visibility="Hidden" IsHitTestVisible="false" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/btn_mode_entertainment_layer1_selected_1.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="ic_disable" Grid.Column="1" Margin="111,90.2,112,160.8" StrokeThickness="0" Width="Auto"
                                Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="{x:Null}"
                                OpacityMask="{x:Null}">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/ic_performance_disable.png"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="false"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="92,217,0,0"
                                RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Hidden"/>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="94.2" Margin="38,0,47,99.8" TextWrapping="Wrap"
                                VerticalAlignment="Bottom" TextAlignment="Center" Foreground="#FFADADAD" FontSize="24"
                                Text="{Binding Content, ElementName=contentPresenter}" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="btn_normal" Property="Opacity" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="btn_selected" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ic_disable" Property="Width" Value="216"/>
                                <Setter TargetName="ic_disable" Property="Height" Value="236"/>
                                <Setter TargetName="ic_disable" Property="Margin" Value="65,32.2,88,142.8"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="29.333"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1_performance" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" IsHitTestVisible="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path Grid.ColumnSpan="2"
                                Data="M 284.88763,3.1116801 L 55.109417,135.99827 C 55.113549,140.52295 55.994629,141.25135 55.99876,145.77603 115.98609,196.20018 430.43016,303.31027 689.77673,147.5533 688.66138,143.02851 689.5587,139.63362 688.44334,135.10883 688.44334,135.10883 461.5258,2.0099109 457.77664,3.5560538 366.44327,41.221719 284.88763,3.1116801 284.88763,3.1116801 Z"
                                Margin="55.111,3.111,48.222,21.196" Stretch="Fill" StrokeThickness="0" Focusable="true"
                                Opacity="0.8" Fill="Black" Stroke="{x:Null}"/>
                            <Rectangle x:Name="btn_normal" Grid.Column="1" Margin="53,0,0,0" StrokeThickness="0" Width="638" Height="231"
                                HorizontalAlignment="Left" VerticalAlignment="Top" Opacity="1" SnapsToDevicePixels="true"
                                Focusable="false" IsHitTestVisible="false" Stroke="{x:Null}" OpacityMask="{x:Null}">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/btn_mode_performance_layer1_selected_2.png"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="btn_selected" Grid.Column="1" Fill="{TemplateBinding BorderBrush}" Margin="0"
                                StrokeThickness="0" Width="738" Height="250" HorizontalAlignment="Left" VerticalAlignment="Top"
                                Visibility="Hidden" Focusable="true" SnapsToDevicePixels="true" IsHitTestVisible="false"
                                Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/btn_mode_performance_layer1_selected_1.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="ic_disable" Grid.Column="1" Margin="293.5,27,298.5,63" StrokeThickness="0" Width="146"
                                Height="160" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="true"
                                Stroke="{x:Null}" OpacityMask="{x:Null}">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/ic_entertainment_disable.png"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="false"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="92,217,0,0"
                                RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Hidden"/>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="57.2" Margin="134,0,130,33" TextWrapping="Wrap"
                                VerticalAlignment="Bottom" TextAlignment="Center" Foreground="#FFADADAD" FontSize="24"
                                IsHitTestVisible="true" Text="{Binding Content, ElementName=contentPresenter}" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="btn_normal" Property="Opacity" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="btn_selected" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ic_disable" Property="Width" Value="216"/>
                                <Setter TargetName="ic_disable" Property="Height" Value="236"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="29.333"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="ic_disable" Property="Margin" Value="251.5,-24,270.5,38"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1_PowerSaving" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="path" Grid.ColumnSpan="2"
                                Data="M 6.6676679,118.66715 C 9.6683379,115.33392 145.8404,34.700784 148.13518,35.776978 393.33471,138.0007 318.26326,309.64176 239.0899,358.40174 239.0899,358.40174 6.4231495,216.73505 6.4231495,216.73505 6.4231495,216.73505 88.00104,182.66696 6.6676679,118.66715 Z"
                                Height="Auto" Margin="53.756,41.099,6.342,47.264" Stretch="Fill" StrokeThickness="0"
                                VerticalAlignment="Stretch" Fill="Black" Opacity="0.8" Focusable="true"
                                RenderTransformOrigin="0.5,0.5" Stroke="{x:Null}">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                        <SkewTransform AngleY="0" AngleX="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Rectangle x:Name="btn_normal" Grid.Column="1" Margin="38,32.428,0,0" StrokeThickness="0" Width="315"
                                Height="324" HorizontalAlignment="Left" VerticalAlignment="Top" Opacity="1"
                                IsHitTestVisible="false" RenderTransformOrigin="0.5,0.5" Stroke="{x:Null}" OpacityMask="{x:Null}">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                                        <SkewTransform AngleY="0" AngleX="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/btn_mode_power_saving_layer1_selected_2.png"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="btn_selected" Grid.Column="1" Fill="{TemplateBinding BorderBrush}" Margin="-10,-4.239,0,0"
                                StrokeThickness="0" Width="363" Height="403" HorizontalAlignment="Left" VerticalAlignment="Top"
                                Visibility="Hidden" IsHitTestVisible="false" RenderTransformOrigin="0.5,0.5" Stroke="{x:Null}">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                                        <SkewTransform AngleY="0" AngleX="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/btn_mode_power_saving_layer1_selected_1.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="ic_disable" Grid.Column="1" Margin="100.995,91.96,122.005,159.04" StrokeThickness="0"
                                Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Stroke="{x:Null}" OpacityMask="{x:Null}">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/ic_power_saving_disable.png"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="false"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="92,217,0,0"
                                RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Hidden" Content="Custom Overclock"/>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="77.311" Margin="59.55,0,81.006,111.856"
                                TextWrapping="Wrap" VerticalAlignment="Bottom" TextAlignment="Center" Foreground="#FFADADAD"
                                FontSize="24" Text="{Binding Content, ElementName=contentPresenter}" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="btn_normal" Property="Opacity" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="btn_selected" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ic_disable" Property="Width" Value="216"/>
                                <Setter TargetName="ic_disable" Property="Height" Value="236"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="29.333"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="ic_disable" Property="Margin" Value="80.222,36.667,66.778,130.333"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1_quiet" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" IsHitTestVisible="true" Background="{x:Null}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path Grid.ColumnSpan="2"
                                Data="M 248.68859,-18.037764 L 55.56945,146.2245 C 55.573582,150.74918 56.787519,148.84188 56.79165,153.36656 133.79461,200.68098 419.80751,297.09581 683.20815,156.0441 682.0928,151.51931 686.15698,148.96383 685.04162,144.43904 685.04162,144.43904 495.32084,-18.464315 491.92176,-16.252304 362.9718,67.664079 248.68859,-18.037764 248.68859,-18.037764 Z"
                                Margin="75.001,35.418,67.079,-8.764" Stretch="Fill" StrokeThickness="0" Focusable="true"
                                Opacity="0.8" Fill="Black" RenderTransformOrigin="0.5,0.5" Stroke="{x:Null}">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                        <SkewTransform AngleY="0" AngleX="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform Y="-10.986999999999966"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Rectangle x:Name="btn_normal" Grid.Column="1" Margin="73.889,20,0,0" StrokeThickness="0" Width="459"
                                Height="130" HorizontalAlignment="Left" VerticalAlignment="Top" Opacity="1"
                                SnapsToDevicePixels="true" Focusable="false" IsHitTestVisible="false" Stroke="{x:Null}"
                                OpacityMask="{x:Null}">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/btn_mode_quiet_layer1_selected_2.png"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="btn_selected" Grid.Column="1" Fill="{TemplateBinding BorderBrush}" Margin="0"
                                StrokeThickness="0" Width="600" Height="150" HorizontalAlignment="Left" VerticalAlignment="Top"
                                Visibility="Hidden" Focusable="true" SnapsToDevicePixels="true" IsHitTestVisible="false"
                                Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/btn_mode_quiet_layer1_selected_1.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="ic_disable" Grid.Column="1" Margin="232.166,-38.815,221.833,28.815" StrokeThickness="0"
                                Width="146" Height="160" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                IsHitTestVisible="true" Stroke="{x:Null}" OpacityMask="{x:Null}">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="image/page_basicsetting/mode/ic_quite_disable.png"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="false"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="92,217,0,0"
                                RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Hidden"/>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="40.756" Margin="181.111,0,158,28.815"
                                TextWrapping="Wrap" VerticalAlignment="Bottom" TextAlignment="Center" Foreground="#FFADADAD"
                                FontSize="24" IsHitTestVisible="true" Text="{Binding Content, ElementName=contentPresenter}" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="btn_normal" Property="Opacity" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="btn_selected" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ic_disable" Property="Width" Value="216"/>
                                <Setter TargetName="ic_disable" Property="Height" Value="236"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="29.333"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="ic_disable" Property="Margin" Value="191.055,-101.778,192.944,15.777"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <Style x:Key="ButtonStyle1_reset1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Storyboard1_save" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.2"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" SnapsToDevicePixels="true">
                            <WrapPanel Margin="0">
                                <Image x:Name="Image_Page_SystemMonitor_btn_save_normal_png" Margin="0"
                                    Source="image/page_systemmonitor/btn_default_normal.png" Stretch="Fill" Width="56" Height="56"
                                    HorizontalAlignment="Left" VerticalAlignment="Top" Cursor="Hand"/>
                                <TextBlock x:Name="textBlock" Height="Auto" TextWrapping="Wrap"
                                    Text="{TemplateBinding Content}" Width="Auto" VerticalAlignment="Center"/>
                            </WrapPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    Property="BorderBrush"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Image_Page_SystemMonitor_btn_save_normal_png" Property="Source"
                                    Value="Image/Page_SystemMonitor/btn_default_hover.png"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Image_Page_SystemMonitor_btn_save_normal_png" Property="Source"
                                    Value="Image/Page_SystemMonitor/btn_save_pressed.png"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1_camera" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Grid.ColumnSpan="2" Margin="0" StrokeThickness="3" Width="46" Height="46"
                                HorizontalAlignment="Center" VerticalAlignment="Top" Fill="#FF686868" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/ic_camera_enable.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="Auto" Margin="0,0,0,30.416" TextWrapping="Wrap"
                                Text="{TemplateBinding Content}" VerticalAlignment="Bottom"
                                FontFamily="Microsoft Sans Serif" TextAlignment="Center" HorizontalAlignment="Center"
                                Foreground="#FF7E7E7E"/>
                            <Rectangle x:Name="rectangle2" Grid.ColumnSpan="2" Fill="#FF686868" Height="40" Margin="0" StrokeThickness="3"
                                VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="75" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_hover.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="rectangle1" Grid.ColumnSpan="2" Fill="{TemplateBinding BorderBrush}" Height="40"
                                Margin="25,0" StrokeThickness="3" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                Width="75" Visibility="Hidden" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_layer1_selected.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="rectangle1" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="rectangle2" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1_tp" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Grid.ColumnSpan="2" Margin="52.75,5.332,52.062,0" StrokeThickness="3" Width="52.188" Height="31.614"
                                HorizontalAlignment="Center" VerticalAlignment="Top" Fill="#FF686868" Focusable="true"
                                Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="nvidia.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="22" Margin="0,0,0,30.416" TextWrapping="Wrap"
                                Text="{TemplateBinding Content}" VerticalAlignment="Bottom"
                                FontFamily="Microsoft Sans Serif" TextAlignment="Center" HorizontalAlignment="Center"
                                Foreground="#FF7E7E7E"/>
                            <Rectangle x:Name="rectangle2" Grid.ColumnSpan="2" Fill="#FF686868" Height="40" Margin="0" StrokeThickness="3"
                                VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="75" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_hover.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="rectangle1" Grid.ColumnSpan="2" Fill="{TemplateBinding BorderBrush}" Height="40"
                                Margin="25,0" StrokeThickness="3" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                Width="75" Visibility="Hidden" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_layer1_selected.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="rectangle1" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="rectangle2" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1_Windows" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Grid.ColumnSpan="2" Margin="55.825,5.333,55.175,0" StrokeThickness="3" Width="46" Height="50"
                                HorizontalAlignment="Center" VerticalAlignment="Top" Fill="#FF686868" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/ic_windows.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="Auto" Margin="0,0,0,30.416" TextWrapping="Wrap"
                                Text="{TemplateBinding Content}" VerticalAlignment="Bottom"
                                FontFamily="Microsoft Sans Serif" TextAlignment="Center" HorizontalAlignment="Center"
                                Foreground="#FF7E7E7E" Width="Auto"/>
                            <Rectangle x:Name="rectangle2" Grid.ColumnSpan="2" Fill="#FF686868" Height="40" Margin="0" StrokeThickness="3"
                                VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="75" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_hover.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="rectangle1" Grid.ColumnSpan="2" Fill="{TemplateBinding BorderBrush}" Height="40"
                                Margin="25,0" StrokeThickness="3" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                Width="75" Visibility="Hidden" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_layer1_selected.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="rectangle1" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="rectangle2" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <Style x:Key="ButtonStyle_sleep" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <StackPanel Margin="0" Height="56" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal">
                                <Rectangle x:Name="rectangle" Fill="#FF878787" HorizontalAlignment="Left" Height="56" Margin="0"
                                    Stroke="Black" Width="56" VerticalAlignment="Top">
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="image/page_basicsetting/btn_sleep_hover.png"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock x:Name="textBlock" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}"
                                    Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF878787"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    Property="BorderBrush"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Value="{StaticResource Button.Pressed.Border}" Property="BorderBrush"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle_S4" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <StackPanel Margin="0" Height="56" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal">
                                <Rectangle x:Name="rectangle" Fill="#FF878787" HorizontalAlignment="Left" Height="56" Margin="0"
                                    Stroke="Black" Width="56" VerticalAlignment="Top">
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="image/page_basicsetting/btn_hibernate_hover.png"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock x:Name="textBlock" Margin="5,0" TextWrapping="Wrap" Text="{TemplateBinding Content}"
                                    Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF878787"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                    Property="BorderBrush"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Value="{StaticResource Button.Pressed.Border}" Property="BorderBrush"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1_scroll" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Grid.ColumnSpan="2" Margin="0" StrokeThickness="3" Width="46" Height="46"
                                HorizontalAlignment="Center" VerticalAlignment="Top" Fill="#FF686868" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/lockkey/ic_scroll_enable.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="Auto" Margin="0,0,0,30.416" TextWrapping="Wrap"
                                Text="{TemplateBinding Content}" VerticalAlignment="Bottom"
                                FontFamily="Microsoft Sans Serif" TextAlignment="Center" HorizontalAlignment="Center"
                                Foreground="#FF7E7E7E"/>
                            <Rectangle x:Name="rectangle2" Grid.ColumnSpan="2" Fill="#FF686868" Height="40" Margin="0" StrokeThickness="3"
                                VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="75" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_hover.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="rectangle1" Grid.ColumnSpan="2" Fill="{TemplateBinding BorderBrush}" Height="40"
                                Margin="25,0" StrokeThickness="3" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                Width="75" Visibility="Hidden" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_layer1_selected.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="rectangle1" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="rectangle2" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1_caps" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Grid.ColumnSpan="2" Margin="0" StrokeThickness="3" Width="46" Height="46"
                                HorizontalAlignment="Center" VerticalAlignment="Top" Fill="#FF686868" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/lockkey/ic_caps_enable.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="Auto" Margin="0,0,0,30.416" TextWrapping="Wrap"
                                Text="{TemplateBinding Content}" VerticalAlignment="Bottom"
                                FontFamily="Microsoft Sans Serif" TextAlignment="Center" HorizontalAlignment="Center"
                                Foreground="#FF7E7E7E"/>
                            <Rectangle x:Name="rectangle2" Grid.ColumnSpan="2" Fill="#FF686868" Height="40" Margin="0" StrokeThickness="3"
                                VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="75" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_hover.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="rectangle1" Grid.ColumnSpan="2" Fill="{TemplateBinding BorderBrush}" Height="40"
                                Margin="25,0" StrokeThickness="3" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                Width="75" Visibility="Hidden" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_layer1_selected.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="rectangle1" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="rectangle2" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1_num" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true" Margin="0,-3.031,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Grid.ColumnSpan="2" Margin="0" StrokeThickness="3" Width="46" Height="46"
                                HorizontalAlignment="Center" VerticalAlignment="Top" Fill="#FF686868" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/lockkey/ic_num_enable.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="Auto" Margin="8.488,0,8.488,27.916" TextWrapping="Wrap"
                                Text="{TemplateBinding Content}" VerticalAlignment="Bottom"
                                FontFamily="Microsoft Sans Serif" TextAlignment="Center" HorizontalAlignment="Center"
                                Foreground="#FF7E7E7E" FontSize="18"/>
                            <Rectangle x:Name="rectangle2" Grid.ColumnSpan="2" Fill="#FF686868" Height="40" Margin="0" StrokeThickness="3"
                                VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="75" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_hover.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="rectangle1" Grid.ColumnSpan="2" Fill="{TemplateBinding BorderBrush}" Height="40"
                                Margin="25,0" StrokeThickness="3" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                Width="75" Visibility="Hidden" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_layer1_selected.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="rectangle1" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="rectangle2" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1_airplane" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Grid.ColumnSpan="2" Margin="55.5,1.332,55.5,0" StrokeThickness="3" Width="46" Height="34.211"
                                HorizontalAlignment="Center" VerticalAlignment="Top" Stroke="{x:Null}" Fill="#FF5D5D5D" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="untitled.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="Auto" Margin="0,0,0,30.416" TextWrapping="Wrap"
                                Text="{TemplateBinding Content}" VerticalAlignment="Bottom"
                                FontFamily="Microsoft Sans Serif" TextAlignment="Center" HorizontalAlignment="Center"
                                Foreground="#FF7E7E7E"/>
                            <Rectangle x:Name="rectangle2" Grid.ColumnSpan="2" Fill="#FF686868" Height="40" Margin="0" StrokeThickness="3"
                                VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="75" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_hover.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="rectangle1" Grid.ColumnSpan="2" Fill="{TemplateBinding BorderBrush}" Height="40"
                                Margin="25,0" StrokeThickness="3" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                Width="75" Visibility="Hidden" Stroke="{x:Null}" SnapsToDevicePixels="True">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_layer1_selected.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="rectangle1" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="rectangle2" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBox_FullScreen" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="Image_ic_close_png" Margin="0" Source="image/main/ic_fullscreen.png" Stretch="Fill"
                                Width="80" Height="60"/>
                            <Rectangle x:Name="rectangle" Margin="0" Width="80" Height="60" Fill="{TemplateBinding Background}"
                                StrokeThickness="0" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#33FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="OpacityMask">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#00000000" Offset="0"/>
                                            <GradientStop Color="#66FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="rectangle" Property="OpacityMask">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#66000000" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="Image_ic_close_png" Property="Source" Value="Image/main/ic_window.png"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked">
                                <Setter TargetName="Image_ic_close_png" Property="Source" Value="Image/main/ic_fullscreen.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="BTN_MIN" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Margin="0" Width="Auto" Height="Auto" Background="{x:Null}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates"/>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="Image_ic_close_png" Margin="0" Source="image/main/ic_minimize.png" Stretch="Fill"
                    Width="Auto" Height="60"/>
                <Rectangle x:Name="rectangle" Margin="0" Width="Auto" Height="60" Fill="{TemplateBinding Background}"
                    StrokeThickness="0" Stroke="{x:Null}">
                    <Rectangle.OpacityMask>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#00000000"/>
                            <GradientStop Color="#33FFFFFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="rectangle" Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#00000000" Offset="1"/>
                                <GradientStop Color="#66FFFFFF" Offset="0"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="rectangle" Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#00000000"/>
                                <GradientStop Color="#66FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="S_BTN_CLOSE" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Margin="0" Width="Auto" Height="Auto" Background="{x:Null}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates"/>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="Image_ic_close_png" Margin="0" Source="image/main/ic_close.png" Stretch="Fill" Width="Auto"
                    Height="60"/>
                <Rectangle x:Name="rectangle" Margin="0" Width="Auto" Height="60" Fill="{TemplateBinding Background}"
                    StrokeThickness="0" Stroke="{x:Null}">
                    <Rectangle.OpacityMask>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#00000000"/>
                            <GradientStop Color="#33FFFFFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="rectangle" Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#00000000" Offset="1"/>
                                <GradientStop Color="#66FFFFFF" Offset="0"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="rectangle" Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#00000000"/>
                                <GradientStop Color="#66FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="CheckBoxStyle1_mute" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="Image_Page_BasicSetting_volume_btn_volume_play_normal_png" Grid.ColumnSpan="2" Margin="0"
                                Source="image/page_basicsetting/volume/btn_volume_play_normal.png" Stretch="Fill"
                                Height="70" VerticalAlignment="Top"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="Image_Page_BasicSetting_volume_btn_volume_play_normal_png" Property="Source"
                                    Value="image/Page_BasicSetting/volume/btn_volume_mute_normal.png"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Image_Page_BasicSetting_volume_btn_volume_play_normal_png" Property="Source"
                                    Value="image/Page_BasicSetting/volume/btn_volume_play_normal.png"/>
                            </Trigger>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Image_Page_BasicSetting_volume_btn_volume_play_normal_png" Property="Source"
                                    Value="image/Page_BasicSetting/volume/btn_volume_play_hover.png"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Image_Page_BasicSetting_volume_btn_volume_play_normal_png" Property="Source"
                                    Value="image/Page_BasicSetting/volume/btn_volume_mute_hover.png"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="CheckBoxControlTemplate1_mute" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image x:Name="Image_Page_BasicSetting_volume_btn_volume_play_normal_png" Grid.ColumnSpan="2" Margin="0"
                    Source="image/page_basicsetting/volume/btn_volume_play_normal.png" Stretch="Fill"
                    Height="70" VerticalAlignment="Center" Width="70" HorizontalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="true">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true"
                                                Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                                                StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="true"/>
                        <Condition Property="IsChecked" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Image_Page_BasicSetting_volume_btn_volume_play_normal_png" Property="Source"
                        Value="image/Page_BasicSetting/volume/btn_volume_play_hover.png"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false"/>
                <Trigger Property="IsPressed" Value="true"/>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Image_Page_BasicSetting_volume_btn_volume_play_normal_png" Property="Source"
                        Value="image/Page_BasicSetting/volume/btn_volume_play_normal.png"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter TargetName="Image_Page_BasicSetting_volume_btn_volume_play_normal_png" Property="Source"
                        Value="image/Page_BasicSetting/volume/btn_volume_mute_normal.png"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal3" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2"
                        Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0"
                        Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" BorderThickness="1" Height="4.0" Margin="0" Grid.Row="1"
                        VerticalAlignment="center">
                        <Canvas Margin="-6,-1">
                            <Rectangle x:Name="PART_SelectionRange"
                                Height="4.0" Visibility="Hidden">
                                <Rectangle.OpacityMask>
                                    <ImageBrush/>
                                </Rectangle.OpacityMask>
                                <Rectangle.Fill>
                                    <ImageBrush/>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1" Margin="0" Grid.RowSpan="2" Height="60">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{DynamicResource RepeatButtonStyle_L}" BorderBrush="Red"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"
                                Background="Transparent"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="false" Height="40" OverridesDefaultStyle="true"
                                Template="{DynamicResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="8"
                                BorderBrush="{TemplateBinding BorderBrush}" Visibility="Visible" Foreground="{x:Null}"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}" Property="Template"/>
                    <Setter TargetName="TrackBackground" Property="Margin" Value="5,2,5,0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}" Property="Template"/>
                    <Setter TargetName="TrackBackground" Property="Margin" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter TargetName="Thumb" Property="Foreground" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" SnapsToDevicePixels="true" Background="#66000000" BorderThickness="0">
                            <ContentPresenter x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Focusable="false"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#CC000000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"
                                    Property="Background"/>
                                <Setter TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}" Property="BorderBrush"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060"/>
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Width="{TemplateBinding Width}" SnapsToDevicePixels="true"
                            Height="{TemplateBinding Height}" Fill="Black"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Value="{DynamicResource ScrollBar.Pressed.Thumb}" Property="Fill"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}" Property="Fill"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD"/>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Width="{TemplateBinding Width}" SnapsToDevicePixels="true"
                            Height="{TemplateBinding Height}" Fill="{StaticResource ScrollBar.Static.Thumb}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}" Property="Fill"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}" Property="Fill"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1,0"/>
            <Setter Property="Width"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" Width="10" SnapsToDevicePixels="true" HorizontalAlignment="Right">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0*"
                                    MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition/>
                                <RowDefinition Height="0*"
                                    MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Border Width="Auto" Grid.Row="1" Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"/>
                            <RepeatButton x:Name="PART_LineUpButton" Width="Auto" VerticalAlignment="Top"
                                Style="{StaticResource ScrollBarButton}" Grid.RowSpan="2"
                                IsEnabled="{TemplateBinding IsMouseOver}" Height="0"
                                Command="{x:Static ScrollBar.LineUpCommand}" Background="{x:Null}">
                                <Path x:Name="ArrowTop" Stretch="Uniform" Margin="3,4,3,3" Fill="{StaticResource ScrollBar.Static.Glyph}"
                                    Data="M 0,4 C 0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 Z"/>
                            </RepeatButton>
                            <Track x:Name="PART_Track" Width="Auto" Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}"
                                IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.DecreaseRepeatButton>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Width="Auto" VerticalAlignment="Top"
                                Style="{StaticResource ScrollBarButton}" Grid.Row="2"
                                IsEnabled="{TemplateBinding IsMouseOver}" Height="0"
                                Command="{x:Static ScrollBar.LineDownCommand}" Background="{x:Null}">
                                <Path x:Name="ArrowBottom" Stretch="Uniform" Margin="3,4,3,3"
                                    Fill="{StaticResource ScrollBar.Static.Glyph}"
                                    Data="M 0,2.5 C 0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 Z"/>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Fill"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Fill"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Fill"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Fill"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Fill"/>
                                <Setter TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Fill"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="1" Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" Style="{StaticResource ScrollBarButton}"
                                        IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}">
                                        <Path x:Name="ArrowLeft" Stretch="Uniform" Margin="3" Fill="{StaticResource ScrollBar.Static.Glyph}"
                                            Data="M 3.18,7 C 3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 Z"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="1">
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Style="{StaticResource ScrollBarButton}"
                                        IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineRightCommand}"
                                        Grid.Column="2">
                                        <Path x:Name="ArrowRight" Stretch="Uniform" Margin="3" Fill="{StaticResource ScrollBar.Static.Glyph}"
                                            Data="M 1.81,7 C 1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 Z"/>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Fill"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}" Property="Fill"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Fill"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}" Property="Fill"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Fill"/>
                                        <Setter TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}" Property="Fill"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}" d:DesignWidth="380">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Corner" Grid.Row="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                    Grid.Column="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Margin="2,0.015,10,-5.042"
                    Grid.Column="0" Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}" CanVerticallyScroll="false"
                    CanHorizontallyScroll="false" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" Grid.ColumnSpan="1" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="2">
                    <ScrollContentPresenter.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform AngleY="-0.243"/>
                            <RotateTransform/>
                            <TranslateTransform Y="-0.796"/>
                        </TransformGroup>
                    </ScrollContentPresenter.RenderTransform>
                </ScrollContentPresenter>
            </Grid>
        </ControlTemplate>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="image/page_systemmonitor/memsetting/btn_mem_setting_dropdown_on.png"/>
                            </Border.OpacityMask>
                            <Border x:Name="splitBorder" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Stretch"
                                BorderThickness="0" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Visibility="Hidden" Margin="0"
                                    HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}"
                                    Data="F1 M 0,0 L 2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"
                                    Property="BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"
                                    Property="Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"
                                    Property="BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"
                                    Property="Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" Property="Fill"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"
                                    Property="BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"
                                    Property="Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#FF7D7D7D"/>
                                <Setter TargetName="templateRoot" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"
                                    Property="BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"
                                    Property="Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="99*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="1" Margin="1,1,0,1"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    Placement="Bottom"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            BorderThickness="0,2,0,0" Background="#FF2A2A2A">
                            <ScrollViewer x:Name="DropDownScrollViewer" HorizontalAlignment="Stretch" BorderThickness="0"
                                Template="{DynamicResource ScrollViewerControlTemplate1}" Height="114" BorderBrush="{x:Null}">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled" Height="102.5">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                                            Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                    Style="{StaticResource ComboBoxToggleButton}" RenderTransformOrigin="0.5,0.5" Margin="0"
                    Foreground="{TemplateBinding Foreground}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    OpacityMask="{x:Null}">
                    <ToggleButton.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform AngleX="0"/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </ToggleButton.RenderTransform>
                </ToggleButton>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false"
                    Margin="{TemplateBinding Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="22"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                    <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5"/>
                    <Setter TargetName="shadow" Property="Color" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false"/>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="100"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    Placement="Bottom"
                    IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer" Foreground="White">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                                            Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                    Style="{StaticResource ComboBoxToggleButton}" HorizontalContentAlignment="Center"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Foreground="{x:Null}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    ScrollViewer.VerticalScrollBarVisibility="Disabled" Grid.Column="1" HorizontalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                    <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5"/>
                    <Setter TargetName="shadow" Property="Color" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="Height" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                        Property="Canvas.Top"/>
                    <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                        Property="Canvas.Left"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle_dropdown" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <Style x:Key="ToggleButtonStyle_dropdown1" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" RenderTransformOrigin="0.5,0.5"
                            Margin="0.267,0,10.566,0" BorderThickness="1" HorizontalAlignment="Stretch">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform AngleX="-32"/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Border x:Name="splitBorder" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Stretch"
                                BorderThickness="0" BorderBrush="Transparent" Background="#FF242424"
                                RenderTransformOrigin="0.5,0.5" Cursor="Hand" OpacityMask="{x:Null}">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform AngleX="0"/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center"
                                    Fill="{StaticResource ComboBox.Static.Glyph}"
                                    Data="F1 M 0,0 L 2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0 Z"
                                    Visibility="Hidden"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"
                                    Property="BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"
                                    Property="Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}" Property="Fill"/>
                                <Setter TargetName="splitBorder" Property="Background" Value="#FF494949"/>
                                <Setter TargetName="splitBorder" Property="BorderThickness" Value="0"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"
                                    Property="BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"
                                    Property="Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" Property="Fill"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"
                                    Property="BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"
                                    Property="Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}" Property="Fill"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"
                                    Property="Background"/>
                                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"
                                    Property="BorderBrush"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"
                                    Property="Background"/>
                                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"
                                    Property="BorderBrush"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate2" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="17.2"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="0"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    Placement="Bottom" OpacityMask="Black" HorizontalAlignment="Stretch"
                    RenderTransformOrigin="0.5,0.5"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" d:IsHidden="True">
                    <Popup.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform AngleX="0"/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Popup.RenderTransform>
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Margin="0,0,8,0" HorizontalAlignment="Left"
                        MinWidth="126" Width="Auto" d:IsHidden="True">
                        <Border x:Name="dropDownBorder" BorderThickness="0" Margin="0" Background="#FF272727"
                            BorderBrush="{x:Null}" d:IsHidden="True">
                            <ScrollViewer x:Name="DropDownScrollViewer" Height="150"
                                Template="{DynamicResource ScrollViewerControlTemplate1}" HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Visible" BorderBrush="{TemplateBinding BorderBrush}">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Center" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                                            Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"
                    Style="{DynamicResource ToggleButtonStyle_dropdown1}" Height="Auto" Margin="0"
                    VerticalAlignment="Stretch" Foreground="#FFACFF00" HorizontalContentAlignment="Center"
                    HorizontalAlignment="Stretch" SnapsToDevicePixels="true"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="Center"
                    Width="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" d:IsHidden="True"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                    <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5"/>
                    <Setter TargetName="shadow" Property="Color" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="Height" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                        Property="Canvas.Top"/>
                    <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                        Property="Canvas.Left"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="RadioButtonStyle1_FAN" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="46" Margin="0" VerticalAlignment="Center" Width="46">
                                <Rectangle x:Name="rectangle" Margin="0" Width="46" Height="46" StrokeThickness="0"
                                    Fill="{TemplateBinding Background}" Stroke="{x:Null}">
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="image/page_systemmonitor/fan/btn_enable.png"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" CornerRadius="100"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Hidden"/>
                            <TextBlock x:Name="textBlock" Grid.Column="1" Margin="0" TextWrapping="Wrap"
                                Text="{TemplateBinding Content}" VerticalAlignment="Center"
                                HorizontalAlignment="Left" Foreground="#FFB4B4B4" FontSize="21.333"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="24"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="rectangle" Property="OpacityMask">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="image/page_systemmonitor/fan/btn_disable.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.FontSize" Value="24"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxOrizzontale" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true" Height="25" Width="175" IsHitTestVisible="False" IsEnabled="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="31*"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="Auto" Margin="7.74,-1,0,2" TextWrapping="Wrap"
                                Text="{TemplateBinding Content}" VerticalAlignment="Center"
                                FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" TextAlignment="Center" HorizontalAlignment="Left"
                                Foreground="#FF7E7E7E" FontSize="10" Grid.Column="2" Width="159.76"/>
                            <Rectangle x:Name="rectangle1" Grid.ColumnSpan="1" Fill="{TemplateBinding BorderBrush}" Height="18.218"
                                Margin="-6.548,0,137.234,5" StrokeThickness="3" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                Width="29.314" Visibility="Hidden" Stroke="{x:Null}" Grid.Column="2" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_layer1_selected.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="rectangle2" Grid.ColumnSpan="3" Fill="#FF686868" Height="18.218" Margin="-6.548,0,137.234,4.86" StrokeThickness="3"
                                VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="29.314" Stroke="{x:Null}" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_hover.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="rectangle1" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="rectangle2" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButton_REV" TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
        </Style>
        <Style x:Key="CheckBoxOrizzontale2" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true" Margin="40,20,0,40">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="34*"/>
                                <RowDefinition Height="3*"/>
                                <RowDefinition Height="14*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Grid.ColumnSpan="2" Margin="-5.5,0" StrokeThickness="3" Width="46" Height="46"
                                HorizontalAlignment="Center" VerticalAlignment="Top" Fill="#FF686868" Stroke="{x:Null}" Visibility="Hidden">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/lockkey/ic_airplane_enable.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="Auto" Margin="-62.5,0,-60.278,24.5" TextWrapping="Wrap"
                                Text="{TemplateBinding Content}" VerticalAlignment="Bottom"
                                FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" TextAlignment="Center" HorizontalAlignment="Center"
                                Foreground="#FF7E7E7E" RenderTransformOrigin="0.5,0.5" Width="157.778" Grid.RowSpan="1" FontSize="10">
                                <TextBlock.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <Rectangle x:Name="rectangle2" Grid.ColumnSpan="2" Fill="#FF686868" Height="18.218" Margin="2.843,0" StrokeThickness="3"
                                VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="29.314" Stroke="{x:Null}" Grid.Row="2">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_hover.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="rectangle1" Grid.ColumnSpan="2" Fill="{TemplateBinding BorderBrush}" Height="18.218"
                                Margin="2.843,0,2.843,0.625" StrokeThickness="3" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                Width="29.314" Visibility="Hidden" Stroke="{x:Null}" SnapsToDevicePixels="True" Grid.Row="2">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_layer1_selected.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="rectangle1" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="rectangle2" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="USB" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Grid.ColumnSpan="2" Margin="54,-3.336,51.501,0" StrokeThickness="3" Width="51.499" Height="51.499"
                                HorizontalAlignment="Center" VerticalAlignment="Top" Fill="#FF686868" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="stock-vector-usb-charging-icon-in-circle-on-white-background-428306944.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <TextBlock x:Name="textBlock" Grid.ColumnSpan="2" Height="Auto" Margin="0,0,0,30.416" TextWrapping="Wrap"
                                Text="{TemplateBinding Content}" VerticalAlignment="Bottom"
                                FontFamily="Microsoft Sans Serif" TextAlignment="Center" HorizontalAlignment="Center"
                                Foreground="#FF7E7E7E" Width="Auto"/>
                            <Rectangle x:Name="rectangle2" Grid.ColumnSpan="2" Fill="#FF686868" Height="40" Margin="0" StrokeThickness="3"
                                VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="75" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_hover.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle x:Name="rectangle1" Grid.ColumnSpan="2" Fill="{TemplateBinding BorderBrush}" Height="40"
                                Margin="25,0" StrokeThickness="3" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                Width="75" Visibility="Hidden" Stroke="{x:Null}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="image/page_basicsetting/device/btn_device_layer1_selected.png"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Value="{StaticResource OptionMarkFocusVisual}" Property="FocusVisualStyle"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="White"/>
                                <Setter TargetName="rectangle" Property="Fill" Value="White"/>
                                <Setter TargetName="rectangle1" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="rectangle2" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Value="{x:Null}" Property="IsChecked"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Margin="0" Width="Auto" Height="Auto" Background="{x:Null}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates"/>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="Image_ic_close_png" Margin="0" Source="white-gear-png-gear-icon-png-white-gear-icon-30.png" Stretch="Fill"
                    Width="Auto" Height="60" OpacityMask="White"/>
                <Rectangle x:Name="rectangle" Margin="0" Width="Auto" Height="60" Fill="{TemplateBinding Background}"
                    StrokeThickness="0" Stroke="{x:Null}">
                    <Rectangle.OpacityMask>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#00000000"/>
                            <GradientStop Color="#33FFFFFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="rectangle" Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#00000000" Offset="1"/>
                                <GradientStop Color="#66FFFFFF" Offset="0"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="rectangle" Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#00000000"/>
                                <GradientStop Color="#66FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid x:Name="grid" Margin="0,0,-0.1,-0.2" Width="996.4" Height="621.8" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
        <Grid.Background>
            <ImageBrush ImageSource="dark-minimalist-wallpaper-new-minimalism-triangle-black-abstract-wallpapers-hd-of-dark-minimalist-wallpaper.jpg">
                <ImageBrush.RelativeTransform>
                    <TransformGroup>
                        <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="1" ScaleX="1.1"/>
                        <SkewTransform AngleY="0" AngleX="0" CenterY="0.5" CenterX="0.5"/>
                        <RotateTransform Angle="0" CenterY="0.5" CenterX="0.5"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </ImageBrush.RelativeTransform>
            </ImageBrush>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="260*"/>
            <RowDefinition Height="367*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Main_Grid" Margin="-255.8,-14,-156.834,-80.058" Grid.RowSpan="2" Loaded="Main_Grid_Loaded">
            <Grid x:Name="grid_device" HorizontalAlignment="Left" Height="114" Margin="181.133,0,0,227.691"
                VerticalAlignment="Bottom" Width="573.334" RenderTransformOrigin="0.5,0.5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="304*"/>
                    <ColumnDefinition Width="269*"/>
                </Grid.ColumnDefinitions>
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.6" ScaleY="0.64"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Path Data="M 86,135.99933 L 726,135.99933 " Margin="-24.55,0,-68.116,104" Stretch="Fill" StrokeThickness="3"
                    VerticalAlignment="Bottom" Width="666" HorizontalAlignment="Left"
                    Stroke="{Binding BorderBrush, ElementName=userControl}" Grid.ColumnSpan="2"/>
                <CheckBox  x:Name="CB_dGPU" Content="dGPU" HorizontalAlignment="Left"
                    Margin="189.812,-3,0,17" Width="157" Foreground="White" Style="{DynamicResource CheckBoxStyle1_tp}"
                    Height="100" Cursor="Hand" Focusable="false" FontSize="18.667" Background="{x:Null}"
                    BorderBrush="{Binding BorderBrush, ElementName=userControl}" Grid.ColumnSpan="2" Checked="CB_dGPU_Checked" Unchecked="CB_dGPU_Unchecked"/>
                <CheckBox  x:Name="CB_Led" Content="LedBar" Margin="0,-1.083,128.507,15.083" Foreground="White"
                    Style="{DynamicResource CheckBoxStyle1_airplane}" Height="100" Cursor="Hand" Width="157"
                    VerticalAlignment="Bottom" HorizontalAlignment="Right" Focusable="false" Background="{x:Null}"
                    BorderBrush="{Binding BorderBrush, ElementName=userControl}" Checked="CB_Led_Checked" RenderTransformOrigin="0.5,0.5" FontSize="18" Unchecked="CB_Led_Unchecked">
                    <CheckBox.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.1"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </CheckBox.RenderTransform>
                </CheckBox>
                <CheckBox  x:Name="CB_Usb" Content="Hibernation USB"
                    Margin="56.847,-2.636,0,15.073" Foreground="White" Style="{DynamicResource USB}" Cursor="Hand" Focusable="false" FontSize="18.667" HorizontalAlignment="Left"
                    Background="{x:Null}" BorderBrush="{Binding BorderBrush, ElementName=userControl}" Width="157" Grid.Column="1" Checked="CB_Usb_Checked" Unchecked="CB_Usb_Unchecked"/>
            </Grid>
            <StackPanel x:Name="SP_S3S4" HorizontalAlignment="Right" Height="56" Margin="0,74.733,129.964,0"
                VerticalAlignment="Top" Orientation="Horizontal" RenderTransformOrigin="0.5,0.5">
                <StackPanel.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.6" ScaleY="0.62"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </StackPanel.RenderTransform>
                <Button Click="btn_S3_Click" x:Name="btn_S3" Content="Sleep" HorizontalAlignment="Left" Height="56"
                    Style="{DynamicResource ButtonStyle_sleep}" Foreground="White" FontFamily="Microsoft Sans Serif"
                    FontSize="21.333" Cursor="Hand" BorderThickness="0" BorderBrush="{x:Null}"/>
                <Path Data="M 166,483.73333 L 171.33333,528.4 " Fill="#FFF4F4F5" Stretch="Fill" StrokeThickness="3"
                    Width="3.333" Stroke="White" StrokeDashArray="1 2 1 2" StrokeDashOffset="2" Margin="15,1.5"/>
                <Button Click="btn_S4_Click" x:Name="btn_S4" HorizontalAlignment="Left" Height="56"
                    Style="{DynamicResource ButtonStyle_S4}" Foreground="White" FontFamily="Microsoft Sans Serif"
                    FontSize="21.333" Cursor="Hand" BorderThickness="0" Content="Hibernate" BorderBrush="{x:Null}"/>
            </StackPanel>
            <Grid x:Name="grid_led" HorizontalAlignment="Right" Height="160.001" Margin="0,0,0,226.791"
                VerticalAlignment="Bottom" Width="633.644" RenderTransformOrigin="0.5,0.5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="182*"/>
                    <ColumnDefinition Width="362*"/>
                    <ColumnDefinition Width="89*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="0*"/>
                </Grid.RowDefinitions>
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Path Data="M 86,135.99933 L 726,135.99933 " Stretch="Fill" StrokeThickness="3"
                    VerticalAlignment="Bottom" Width="666" HorizontalAlignment="Right"
                    Stroke="{Binding BorderBrush, ElementName=userControl}" Grid.Row="1" Height="0" Grid.ColumnSpan="3" Margin="-32.356,0,0,0"/>
                <StackPanel x:Name="SP_led_lock" Orientation="Horizontal" HorizontalAlignment="Right"
                    VerticalAlignment="Bottom" Width="614.175" ScrollViewer.CanContentScroll="true" Height="206.778" Grid.ColumnSpan="3" Margin="0,-46.777,0,0">
                    <CheckBox x:Name="CB_caps_lock" Content="Caps Lock" Foreground="White"
                        Style="{DynamicResource CheckBoxStyle1_caps}" Height="100" Cursor="Hand" Width="100"
                        Margin="10,0,35,1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Focusable="false"
                        Background="{x:Null}" BorderBrush="{Binding BorderBrush, ElementName=userControl}" RenderTransformOrigin="0.5,0.5" ClipToBounds="True" FontSize="18" IsEnabled="False">
                        <CheckBox.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </CheckBox.RenderTransform>
                    </CheckBox>
                    <CheckBox  x:Name="CB_num_lock" Content="Num Lock" Margin="10,0,35,-0.071" Foreground="White"
                        Style="{DynamicResource CheckBoxStyle1_num}" Height="98.586" Cursor="Hand" Width="99.81"
                        VerticalAlignment="Bottom" HorizontalAlignment="Right" Focusable="false" Background="{x:Null}"
                        BorderBrush="{Binding BorderBrush, ElementName=userControl}" RenderTransformOrigin="0.5,0.5" IsEnabled="False">
                        <CheckBox.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </CheckBox.RenderTransform>
                    </CheckBox>
                    <CheckBox  x:Name="CB_Windows_DIS" Content="Left Windows Key"
                    Margin="0,94.667,0,-4.556" Foreground="White" Style="{DynamicResource CheckBoxStyle1_Windows}" Cursor="Hand" Focusable="false" FontSize="18.667" HorizontalAlignment="Left"
                    Background="{x:Null}" BorderBrush="{Binding BorderBrush, ElementName=userControl}" Width="151.856" Checked="CB_Windows_DIS_Checked" Unchecked="CB_Windows_DIS_Unchecked"/>
                </StackPanel>
            </Grid>
            <Rectangle Fill="{Binding Background, ElementName=window}" HorizontalAlignment="Left" Height="7.2" Margin="289.8,457.925,0,0" Stroke="Black" StrokeThickness="3" VerticalAlignment="Top" Width="355.533"/>
            <Rectangle Fill="{Binding Background, ElementName=window}" HorizontalAlignment="Left" Height="7.2" Margin="857.4,457.925,0,0" Stroke="Black" StrokeThickness="3" VerticalAlignment="Top" Width="355.533"/>
            <Grid Margin="870.8,79,110.234,237.858" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="1" Y="1"/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <local:UC_volume HorizontalAlignment="Left" Margin="47.78,0,0,0" VerticalAlignment="Top"/>
                <Grid Margin="166.8,100,89.869,150">
                    <TextBlock x:Name="t_0" HorizontalAlignment="Left" Margin="16.6,0,0,-20" TextWrapping="Wrap" Text="0"
                        VerticalAlignment="Bottom" Foreground="#FF9C9C9C" FontFamily="Microsoft Sans Serif"
                        FontSize="18.667" RenderTransformOrigin="0.167,1"/>
                    <TextBlock x:Name="t_25" HorizontalAlignment="Left" Margin="-9.167,56.667,0,0" TextWrapping="Wrap" Text="25"
                        VerticalAlignment="Top" Foreground="#FF9C9C9C" FontFamily="Microsoft Sans Serif" FontSize="18.667"/>
                    <TextBlock x:Name="t_50" Margin="69.599,0,74.131,0" TextWrapping="Wrap" Text="50"
                        VerticalAlignment="Top" Foreground="#FF9C9C9C" FontFamily="Microsoft Sans Serif" FontSize="18.667"/>
                    <TextBlock x:Name="t_75" Margin="0,56.667,3.33,0" TextWrapping="Wrap" Text="75" VerticalAlignment="Top"
                        Foreground="#FF9C9C9C" FontFamily="Microsoft Sans Serif" FontSize="18.667"
                        HorizontalAlignment="Right"/>
                    <TextBlock x:Name="t_100" Margin="0,0,25.581,-23.917" TextWrapping="Wrap" Text="100"
                        VerticalAlignment="Bottom" Foreground="#FF9C9C9C" FontFamily="Microsoft Sans Serif"
                        FontSize="18.667" HorizontalAlignment="Right"/>
                </Grid>

            </Grid>
            <Grid x:Name="grid_mode" Margin="294.614,9,185.234,166.886" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Image x:Name="bg_system_layer3_Copy"
                    Source="image/page_basicsetting/mode/bg_mode_1_layer1.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Margin="-5.938,-17.001,1.228,54.387">
                    <Image.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Image.RenderTransform>
                </Image>
                <RadioButton x:Name="RB_performance" Content="Performance"
                    HorizontalAlignment="Right" Margin="0,19.799,115.401,0" Width="369" Height="411"
                    VerticalAlignment="Top" Style="{DynamicResource RadioButtonStyle1_entertainment}" Cursor="Hand"
                    Foreground="White" FontFamily="Microsoft Sans Serif" FontSize="29.333" GroupName="MODE"
                    BorderBrush="Red" RenderTransformOrigin="0.5,0.5" IsChecked="False" Checked="RB_performance_Checked">
                    <RadioButton.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </RadioButton.RenderTransform>
                </RadioButton>
                <RadioButton  x:Name="RB_Entertainment" Content="Entertainment"
                    Margin="90.41,0,103.576,104.234" Style="{DynamicResource RadioButtonStyle1_performance}"
                    Cursor="Hand" Foreground="White" FontFamily="Microsoft Sans Serif" FontSize="29.333"
                    GroupName="MODE" Width="738" SnapsToDevicePixels="true" BorderThickness="0"
                    Height="250" VerticalAlignment="Bottom" BorderBrush="#FF9E00FF" Background="{x:Null}" RenderTransformOrigin="0.5,0.5" VerticalContentAlignment="Bottom" Checked="RB_Entertainment_Checked_1" IsChecked="False">
                    <RadioButton.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </RadioButton.RenderTransform>
                </RadioButton>
                <RadioButton  x:Name="RB_Custom" Content="Power Saving"
                    Margin="113.933,22.865,0,0" Height="403" VerticalAlignment="Top"
                    Style="{DynamicResource RadioButtonStyle1_PowerSaving}" Cursor="Hand" Foreground="White"
                    FontFamily="Microsoft Sans Serif" FontSize="29.333" GroupName="MODE" HorizontalAlignment="Left"
                    Width="363" BorderBrush="#FFFDBB01" RenderTransformOrigin="0.5,0.5" Checked="RB_Custom_Checked">
                    <RadioButton.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </RadioButton.RenderTransform>
                </RadioButton>
                <RadioButton x:Name="RB_Quite" Content="Quiet" Margin="156.666,52.301,153.334,0"
                    Style="{DynamicResource RadioButtonStyle1_quiet}" Cursor="Hand" Foreground="White"
                    FontFamily="Microsoft Sans Serif" FontSize="29.333" GroupName="MODE" SnapsToDevicePixels="true"
                    BorderThickness="0" Height="150" VerticalAlignment="Top" BorderBrush="#FF00A7FF"
                    Background="{x:Null}" RenderTransformOrigin="0.5,0.5" Checked="RB_Quite_Checked" IsChecked="false">
                    <RadioButton.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </RadioButton.RenderTransform>
                </RadioButton>
            </Grid>

        </Grid>
        <Grid Margin="10.666,0,-10.666,350.542" Grid.RowSpan="2">
            <Grid x:Name="main_windowStyle" HorizontalAlignment="Right" Height="78" VerticalAlignment="Top"
                Width="311.4" RenderTransformOrigin="0.5,0.5" Margin="0,-15,-53,0">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Button Click="BTN_min_Click" x:Name="BTN_min" Content="" Margin="122,3,0,15"
                    BorderThickness="0" Template="{DynamicResource BTN_MIN}" Width="80" HorizontalAlignment="Left"
                    Height="60" BorderBrush="{x:Null}" Background="{Binding Fill, ElementName=title_icon}"
                    Foreground="{x:Null}"/>
                <Button Click="BTN_close_Click" x:Name="BTN_close" Content="" Margin="0,-1,16.31,19"
                    BorderThickness="0" Template="{DynamicResource S_BTN_CLOSE}" Width="80" HorizontalAlignment="Right"
                    Height="60" BorderBrush="{x:Null}" Background="{Binding Fill, ElementName=title_icon}"
                    Foreground="{x:Null}"/>
                <Button Click="BTN_settings_Click" x:Name="BTN_settings" Content="" Margin="40.09,2.333,0,21.334"
                    BorderThickness="0" Template="{DynamicResource ButtonControlTemplate1}" Width="80" HorizontalAlignment="Left" BorderBrush="{x:Null}" Background="{Binding Fill, ElementName=title_icon}"
                    Foreground="{x:Null}" RenderTransformOrigin="0.5,0.5">
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>
            </Grid>

            <Grid Margin="0,-17.624,0,242.258" MouseDown="Grid_MouseDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="83*"/>
                    <ColumnDefinition Width="207*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Stroke="Black" Margin="0,19,159.6,-18.224" Grid.ColumnSpan="2" Opacity="0" Fill="Black"/>
                <Image HorizontalAlignment="Center" Height="47.512" VerticalAlignment="Center" Width="636.594" Source="/image/bg_title_bar_3.png" RenderTransformOrigin="0.404,0.172" Grid.ColumnSpan="2" Margin="183,19,180.006,-18.224"/>
                <TextBlock x:Name="Title_Name" Margin="180.729,19.165,181.077,-15" TextWrapping="Wrap" Foreground="White"
                        FontSize="36" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" HorizontalAlignment="Center"
                        VerticalAlignment="Center" Width="636.594" UseLayoutRounding="False" TextAlignment="Center" Grid.ColumnSpan="2" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform><Run Text="Rev. Center 2"/></TextBlock>
            </Grid>
            <TextBlock x:Name="Title_Name_Copy" Margin="801.807,590.729,11.306,-344.145" TextWrapping="Wrap" Foreground="White"
                    FontSize="18" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" HorizontalAlignment="Center"
                    VerticalAlignment="Center" Width="185.287" UseLayoutRounding="False" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Text="lKinder_Bueno" Height="25.674" Cursor="Hand" MouseDown="Title_Name_Copy_MouseDown">
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform></TextBlock>
            <TextBlock x:Name="Title_Name_Copy1" Margin="661.414,20,267.066,232.324" TextWrapping="Wrap" Foreground="White"
                FontSize="18" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" HorizontalAlignment="Center"
                VerticalAlignment="Center" Width="67.92" UseLayoutRounding="False" TextAlignment="Center" RenderTransformOrigin="0.5,0.5" Text="v1.6" Height="18.934">
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.RenderTransform></TextBlock>
        </Grid>
        <local:LedBar x:Name="LedBar" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.RowSpan="2" Visibility="Collapsed" d:IsHidden="True"/>
        <Rectangle Fill="{Binding Background, ElementName=window}" Margin="55.187,158.521,772.463,70.778" RenderTransformOrigin="0.5,0.5">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="1.016"/>
                    <SkewTransform AngleX="-32"/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
        <ComboBox x:Name="Menu"
                        Width="181.267" Template="{DynamicResource ComboBoxTemplate2}" Text="0"
                        Style="{DynamicResource ComboBoxStyle_dropdown}" Margin="54.001,161.332,761.132,70.012" Height="26.5"
                        HorizontalContentAlignment="Center" HorizontalAlignment="Center" FontFamily="/Rev.Center2;component/image/#Neuropol X Rg" Foreground="White" Background="#FF2B2B2B" BorderThickness="0" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" MaxDropDownHeight="80" FontSize="13" SelectedIndex="{Binding TabIndex, ElementName=Menu_combo}" DropDownClosed="Menu_DropDownClosed_1" >
            <ComboBoxItem x:Name="Menu_combo" Content="Main Settings" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" FontSize="11" Selected="ComboBoxItem_Selected" Height="18" TabIndex="0" Width="151"/>
            <ComboBoxItem x:Name="Ledbar_combo" Content="LED Bar" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" FontSize="11" Selected="ComboBoxItem_Selected_1" Height="18" Width="151"/>
            <ComboBoxItem x:Name="Keyboard_combo" Content="KeyBoard Light" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" FontSize="11" Selected="ComboBoxItem_Selected_2" Height="18" Width="151"/>
            <ComboBoxItem x:Name="Info_combo" Content="System Info" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" FontSize="11" Selected="ComboBoxItem_Selected_3" Height="18" Width="151"/>
        </ComboBox>
        <local:system_info x:Name="Advanced_Info" HorizontalAlignment="Left" Margin="-465,-200,-458.6,-258.2" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="2" d:IsHidden="True" Visibility="Collapsed">
            <local:system_info.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </local:system_info.RenderTransform>
        </local:system_info>
        <Grid x:Name="grid_power" HorizontalAlignment="Left" Height="152.8" Margin="55,50,0,0"
                VerticalAlignment="Top" Width="157.4" RenderTransformOrigin="0.5,0.5" d:IsHidden="True">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Image x:Name="image_power" HorizontalAlignment="Left" Margin="33,41,0,0" Width="106"
                    Source="image/page_basicsetting/ic_power_status_ac.png" Height="50" VerticalAlignment="Top"/>
            <TextBlock x:Name="T_BatteryValue" HorizontalAlignment="Left" Margin="57.556,52.332,0,68.668"
                    TextWrapping="Wrap" Text="100" Width="59" Foreground="White" FontFamily="Microsoft Sans Serif"
                    TextAlignment="Center" FontSize="26.667"/>
            <TextBlock x:Name="textBlock_Copy" HorizontalAlignment="Left" Margin="105.776,61.662,0,74.004"
                    TextWrapping="Wrap" Text="%" Width="29.222" Foreground="White" FontFamily="Microsoft Sans Serif"
                    TextAlignment="Center" FontSize="18.667"/>
            <Image x:Name="image_power_2" HorizontalAlignment="Left" Margin="33,41,0,0" Width="106"
                    Source="image/page_basicsetting/ic_power_status_dc.png" Height="50" VerticalAlignment="Top"/>
        </Grid>
        <Grid x:Name="grid_fan" HorizontalAlignment="Left" Height="317.333" Margin="-254,109.681,0,-63.058"
                VerticalAlignment="Top" Width="1145.6" Style="{DynamicResource GridStyle1}" RenderTransformOrigin="0.5,0.5" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="558.805"/>
            </Grid.ColumnDefinitions>
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Image x:Name="ventolina" gif:ImageBehavior.RepeatBehavior="Forever" HorizontalAlignment="Left" Height="210" VerticalAlignment="Top" Width="230" gif:ImageBehavior.AnimatedSource="image/3242157 (2).gif" Margin="226,41.283,0,0"/>
            <Path x:Name="path_sw_1" Data="M 24.5,0 L 382,0 " Height="2" Margin="10,139.804,393.833,0" Stretch="Fill"
                    VerticalAlignment="Top" StrokeThickness="2" StrokeDashArray="1.5 1.5" Stroke="{Binding Background, ElementName=window}"/>
            <Path x:Name="path_sw_2" Data="M 24.5,0 L 382,0 " Height="2" Margin="474.8,139.804,23.2,0" Stretch="Fill"
                    VerticalAlignment="Top" StrokeThickness="2" StrokeDashArray="1.5 1.5" Stroke="{Binding Background, ElementName=window}" Grid.ColumnSpan="2"/>
            <Path Data="M 230.86667,188.79967 C 220.27579,168.27959 224.84077,156.20471 230.86667,140.266 L 93.288016,122.28277 "
                    HorizontalAlignment="Left" Height="38.381" Margin="194.09,138.976,0,0" Stretch="Fill"
                    StrokeThickness="3" VerticalAlignment="Top" Width="40.836" RenderTransformOrigin="0.5,0.5" Stroke="{Binding Background, ElementName=window}">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-14.631"/>
                        <TranslateTransform X="0.64161623307442639" Y="-4.8381297601529134"/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
            <Path Data="M 230.86667,188.79967 C 220.27579,168.27959 224.84077,156.20471 230.86667,140.266 L 93.288016,122.28277 "
                    HorizontalAlignment="Left" Height="38.381" Margin="428.757,139.243,0,0" Stretch="Fill"
                    StrokeThickness="3" VerticalAlignment="Top" Width="40.836" RenderTransformOrigin="0.5,0.5" Stroke="{Binding Background, ElementName=window}">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="1" ScaleX="-1"/>
                        <SkewTransform AngleY="0" AngleX="0"/>
                        <RotateTransform Angle="14.631"/>
                        <TranslateTransform X="0.64161623307442639" Y="-4.8381297601529134"/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
            <TextBlock x:Name="T_FAN_Speed" Margin="10,0,0,183" TextWrapping="Wrap" Text="Fan Speed"
                    VerticalAlignment="Bottom" Foreground="White" FontSize="24" FontFamily="Microsoft Sans Serif"
                    FlowDirection="RightToLeft" TextAlignment="Right" Width="212" HorizontalAlignment="Left"/>
            <Grid x:Name="grid_Fan_Ratio" Width="800" Margin="360,146.804,-14.4,64.729" HorizontalAlignment="Left" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="87*"/>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="703*"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="T_FanAutoMin" VerticalAlignment="Bottom" Text="0" TextWrapping="Wrap"
                        TextAlignment="Center" Margin="129.799,0,0,11.666" Height="18" HorizontalAlignment="Left"
                        FontFamily="Microsoft Sans Serif" FontSize="18.667" Foreground="White" Grid.Column="2"/>
                <TextBlock x:Name="T_FanAutoMax" VerticalAlignment="Bottom" Text="70" TextWrapping="Wrap"
                        TextAlignment="Center" Margin="0,0,189.456,11.666" Height="18" HorizontalAlignment="Right"
                        FontFamily="Microsoft Sans Serif" FontSize="18.667" Foreground="White" RenderTransformOrigin="0.704,0.692" Grid.Column="2"/>
                <Grid Grid.ColumnSpan="3" Margin="68.934,28,34.066,17.8" Style="{DynamicResource SLiderbello}">
                    <Grid.Resources>
                        <Style x:Key="SLiderbello" TargetType="{x:Type Grid}"/>
                    </Grid.Resources>
                    <Rectangle x:Name="R_sliderFan_RatioI" Width="697" VerticalAlignment="Top" StrokeThickness="2"
                            Margin="0,15.652,0,0" Height="42.881" HorizontalAlignment="Left" Fill="{Binding Background, ElementName=window}">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="image/page_systemmonitor/cpugpusetting/slider_gpu_setting_1.png"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Slider x:Name="slider_FAN_AutoOffset" Width="362.399"
                            VerticalAlignment="Bottom" SmallChange="1" Style="{DynamicResource SliderStyle_INC}"
                            Margin="154.268,0,0,0" IsSnapToTickEnabled="true" IsMoveToPointEnabled="true" Height="60"
                            HorizontalAlignment="Left" Cursor="Hand" Maximum="7" LargeChange="0" Background="{x:Null}" Value="1" OpacityMask="{Binding Background, ElementName=slider_FAN_AutoOffset}" BorderBrush="Red" PreviewMouseUp="slider_FAN_AutoOffset_ValueChanged" >
                        <Slider.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform AngleX="-32"/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Slider.LayoutTransform>
                    </Slider>
                </Grid>
                <Grid x:Name="G_T_Fan_Offset" Width="161.2" Margin="67.6,-17,0,42.44" HorizontalAlignment="Left" Grid.ColumnSpan="3">
                    <TextBlock x:Name="T_Fan_Offset" Width="170" VerticalAlignment="Bottom" Text="Offset" TextWrapping="Wrap"
                            Margin="0" HorizontalAlignment="Left" FontFamily="Microsoft Sans Serif" FontSize="18.667"
                            Foreground="White"/>
                </Grid>
                <TextBlock x:Name="T_Fan_Percent2" VerticalAlignment="Bottom" Text="%" TextWrapping="Wrap"
                        TextAlignment="Center" Margin="0,0,11.839,42.44" Height="18" HorizontalAlignment="Right"
                        FontFamily="Microsoft Sans Serif" FontSize="16" Foreground="White" Width="22.227" Grid.Column="2"/>
            </Grid>
            <TextBlock Margin="0,191,347.8,0" TextWrapping="Wrap" Text="RPM" VerticalAlignment="Top" Foreground="White"
                    FontSize="18.667" FontFamily="Microsoft Sans Serif" FlowDirection="RightToLeft"
                    TextAlignment="Right" HorizontalAlignment="Right" Visibility="Hidden"/>
            <TextBlock x:Name="TB_Fan_RPM" Margin="0,189,393.8,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top"
                    Foreground="White" FontSize="21.333" FontFamily="Microsoft Sans Serif" FlowDirection="RightToLeft"
                    TextAlignment="Right" HorizontalAlignment="Right" Visibility="Hidden"/>
            <TextBlock Margin="0,193.731,465.953,0" TextWrapping="Wrap" Text="/" VerticalAlignment="Top"
                    Foreground="White" FontSize="18.667" FontFamily="Microsoft Sans Serif" FlowDirection="RightToLeft"
                    TextAlignment="Right" HorizontalAlignment="Right" Visibility="Hidden"/>
            <TextBlock Margin="0,193.731,475.446,0" TextWrapping="Wrap" Text="%" VerticalAlignment="Top"
                    Foreground="White" FontSize="18.667" FontFamily="Microsoft Sans Serif" FlowDirection="RightToLeft"
                    TextAlignment="Right" HorizontalAlignment="Right" Visibility="Hidden"/>
            <TextBlock x:Name="T_Fan_Percent1" Margin="0,186,496.8,0" TextWrapping="Wrap" Text="0"
                    VerticalAlignment="Top" Foreground="White" FontSize="26.667" FontFamily="Microsoft Sans Serif"
                    FlowDirection="RightToLeft" TextAlignment="Right" HorizontalAlignment="Right" Visibility="Hidden"/>
            <WrapPanel x:Name="WP_FANBtn" Height="72.661" Margin="439.187,62.502,0,0" VerticalAlignment="Top" Grid.ColumnSpan="2">
                <RadioButton Checked="RB_Fan_Auto_Checked" x:Name="RB_Fan_Auto" Content="Auto"
                        Foreground="White" FontFamily="Microsoft Sans Serif" FontSize="24"
                        Style="{DynamicResource RadioButtonStyle1_FAN}" VerticalContentAlignment="Center" Cursor="Hand"
                        Height="46" Background="{Binding Background, ElementName=window}" IsChecked="False"/>
                <RadioButton Checked="RB_Fan_Max_Checked" x:Name="RB_Fan_Max" Content="Max"
                        HorizontalAlignment="Left" Foreground="White" FontFamily="Microsoft Sans Serif" FontSize="24"
                        Style="{DynamicResource RadioButtonStyle1_FAN}" VerticalContentAlignment="Center" Cursor="Hand"
                        Height="46" Margin="20,0" Background="{Binding Background, ElementName=window}" IsChecked="False"/>
                <RadioButton  Checked="RB_Fan_Silent_Checked" x:Name="RB_Fan_Silent" Content="Silent"
                        HorizontalAlignment="Left" Foreground="White" FontFamily="Microsoft Sans Serif" FontSize="24"
                        Style="{DynamicResource RadioButtonStyle1_FAN}" VerticalContentAlignment="Center" Cursor="Hand"
                        Height="46" Background="{Binding Background, ElementName=window}" IsChecked="False"/>
                <RadioButton  Checked="RB_Fan_Static_Checked" x:Name="RB_Fan_Static" Content="Static"
                        HorizontalAlignment="Left" Foreground="White" FontFamily="Microsoft Sans Serif" FontSize="24"
                        Style="{DynamicResource RadioButtonStyle1_FAN}" VerticalContentAlignment="Center" Cursor="Hand"
                        Height="46" Background="{Binding Background, ElementName=window}" IsChecked="False"/>
                <RadioButton  Checked="RB_Fan_Manual_Checked" x:Name="RB_Fan_Manual" Content="Manual"
                    HorizontalAlignment="Left" Foreground="White" FontFamily="Microsoft Sans Serif" FontSize="24"
                    Style="{DynamicResource RadioButtonStyle1_FAN}" VerticalContentAlignment="Center" Cursor="Hand"
                    Height="46" Background="{Binding Background, ElementName=window}" IsChecked="False"/>
                <Button Click="BTN_fan_custom_Clik" x:Name="BTN_fan_custom" Content=""
                    BorderThickness="0" Template="{DynamicResource ButtonControlTemplate1}" Width="80" HorizontalAlignment="Left" BorderBrush="{x:Null}" Background="{Binding Fill, ElementName=title_icon}"
                    Foreground="{x:Null}" RenderTransformOrigin="1.119,0.411" Height="54.333">
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform X="-14.856" Y="1.451"/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>
            </WrapPanel>
            <Grid Width="168" Height="168" Margin="244,62.502,174.8,86.831">
                <Grid.Background>
                    <ImageBrush ImageSource="image/page_systemmonitor/fan/system_fan_layer1_1.png"/>
                </Grid.Background>
                <Rectangle x:Name="R_FanLayer2" Margin="0" Width="168" Height="168" HorizontalAlignment="Center"
                        VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Fill="{Binding Background, ElementName=window}">
                    <Rectangle.OpacityMask>
                        <ImageBrush ImageSource="image/page_systemmonitor/fan/system_fan_layer2_1.png"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Grid>
        </Grid>

    </Grid>
</Window>
